use ::libc;
use ::c2rust_bitfields;
extern "C" {
    fn malloc(_: libc::c_ulong) -> *mut libc::c_void;
    fn free(_: *mut libc::c_void);
    fn memcpy(
        _: *mut libc::c_void,
        _: *const libc::c_void,
        _: libc::c_ulong,
    ) -> *mut libc::c_void;
    fn memmove(
        _: *mut libc::c_void,
        _: *const libc::c_void,
        _: libc::c_ulong,
    ) -> *mut libc::c_void;
    fn memset(
        _: *mut libc::c_void,
        _: libc::c_int,
        _: libc::c_ulong,
    ) -> *mut libc::c_void;
    fn memcmp(
        _: *const libc::c_void,
        _: *const libc::c_void,
        _: libc::c_ulong,
    ) -> libc::c_int;
    fn XXH32(
        input: *const libc::c_void,
        length: size_t,
        seed: XXH32_hash_t,
    ) -> XXH32_hash_t;
}
pub type __uint8_t = libc::c_uchar;
pub type __uint16_t = libc::c_ushort;
pub type __uint32_t = libc::c_uint;
pub type uint8_t = __uint8_t;
pub type uint16_t = __uint16_t;
pub type uint32_t = __uint32_t;
pub type uintptr_t = libc::c_ulong;
pub type size_t = libc::c_ulong;
pub type lsxpack_strlen_t = uint16_t;
pub type lsxpack_flag = libc::c_uint;
pub const LSXPACK_NEVER_INDEX: lsxpack_flag = 64;
pub const LSXPACK_VAL_MATCHED: lsxpack_flag = 32;
pub const LSXPACK_NAMEVAL_HASH: lsxpack_flag = 16;
pub const LSXPACK_NAME_HASH: lsxpack_flag = 8;
pub const LSXPACK_APP_IDX: lsxpack_flag = 4;
pub const LSXPACK_QPACK_IDX: lsxpack_flag = 2;
pub const LSXPACK_HPACK_VAL_MATCHED: lsxpack_flag = 1;
#[derive(Copy, Clone, BitfieldStruct)]
#[repr(C)]
pub struct lsxpack_header {
    pub buf: *mut libc::c_char,
    pub name_hash: uint32_t,
    pub nameval_hash: uint32_t,
    pub name_offset: lsxpack_strlen_t,
    pub name_len: lsxpack_strlen_t,
    pub val_offset: lsxpack_strlen_t,
    pub val_len: lsxpack_strlen_t,
    pub chain_next_idx: uint16_t,
    pub hpack_index: uint8_t,
    pub qpack_index: uint8_t,
    pub app_index: uint8_t,
    #[bitfield(name = "flags", ty = "lsxpack_flag", bits = "0..=7")]
    pub flags: [u8; 1],
    pub indexed_type: uint8_t,
    pub dec_overhead: uint8_t,
}
pub type lsxpack_header_t = lsxpack_header;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct lshpack_enc {
    pub hpe_cur_capacity: libc::c_uint,
    pub hpe_max_capacity: libc::c_uint,
    pub hpe_next_id: libc::c_uint,
    pub hpe_nelem: libc::c_uint,
    pub hpe_nbits: libc::c_uint,
    pub hpe_all_entries: lshpack_enc_head,
    pub hpe_buckets: *mut lshpack_double_enc_head,
    pub hpe_hist_buf: *mut uint32_t,
    pub hpe_hist_size: libc::c_uint,
    pub hpe_hist_idx: libc::c_uint,
    pub hpe_hist_wrapped: libc::c_int,
    pub hpe_flags: C2RustUnnamed,
}
pub type C2RustUnnamed = libc::c_uint;
pub const LSHPACK_ENC_USE_HIST: C2RustUnnamed = 1;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct lshpack_double_enc_head {
    pub by_name: lshpack_enc_head,
    pub by_nameval: lshpack_enc_head,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct lshpack_enc_head {
    pub stqh_first: *mut lshpack_enc_table_entry,
    pub stqh_last: *mut *mut lshpack_enc_table_entry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct lshpack_enc_table_entry {
    pub ete_next_nameval: C2RustUnnamed_0,
    pub ete_next_name: C2RustUnnamed_0,
    pub ete_next_all: C2RustUnnamed_0,
    pub ete_id: libc::c_uint,
    pub ete_nameval_hash: libc::c_uint,
    pub ete_name_hash: libc::c_uint,
    pub ete_name_len: libc::c_uint,
    pub ete_val_len: libc::c_uint,
    pub ete_buf: [libc::c_char; 0],
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_0 {
    pub stqe_next: *mut lshpack_enc_table_entry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct lshpack_dec {
    pub hpd_dyn_table: lshpack_arr,
    pub hpd_max_capacity: libc::c_uint,
    pub hpd_cur_max_capacity: libc::c_uint,
    pub hpd_cur_capacity: libc::c_uint,
    pub hpd_state: libc::c_uint,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct lshpack_arr {
    pub nalloc: libc::c_uint,
    pub nelem: libc::c_uint,
    pub off: libc::c_uint,
    pub els: *mut uintptr_t,
}
pub type lshpack_static_hdr_idx = libc::c_uint;
pub const LSHPACK_HDR_TOBE_INDEXED: lshpack_static_hdr_idx = 255;
pub const LSHPACK_HDR_WWW_AUTHENTICATE: lshpack_static_hdr_idx = 61;
pub const LSHPACK_HDR_VIA: lshpack_static_hdr_idx = 60;
pub const LSHPACK_HDR_VARY: lshpack_static_hdr_idx = 59;
pub const LSHPACK_HDR_USER_AGENT: lshpack_static_hdr_idx = 58;
pub const LSHPACK_HDR_TRANSFER_ENCODING: lshpack_static_hdr_idx = 57;
pub const LSHPACK_HDR_STRICT_TRANSPORT_SECURITY: lshpack_static_hdr_idx = 56;
pub const LSHPACK_HDR_SET_COOKIE: lshpack_static_hdr_idx = 55;
pub const LSHPACK_HDR_SERVER: lshpack_static_hdr_idx = 54;
pub const LSHPACK_HDR_RETRY_AFTER: lshpack_static_hdr_idx = 53;
pub const LSHPACK_HDR_REFRESH: lshpack_static_hdr_idx = 52;
pub const LSHPACK_HDR_REFERER: lshpack_static_hdr_idx = 51;
pub const LSHPACK_HDR_RANGE: lshpack_static_hdr_idx = 50;
pub const LSHPACK_HDR_PROXY_AUTHORIZATION: lshpack_static_hdr_idx = 49;
pub const LSHPACK_HDR_PROXY_AUTHENTICATE: lshpack_static_hdr_idx = 48;
pub const LSHPACK_HDR_MAX_FORWARDS: lshpack_static_hdr_idx = 47;
pub const LSHPACK_HDR_LOCATION: lshpack_static_hdr_idx = 46;
pub const LSHPACK_HDR_LINK: lshpack_static_hdr_idx = 45;
pub const LSHPACK_HDR_LAST_MODIFIED: lshpack_static_hdr_idx = 44;
pub const LSHPACK_HDR_IF_UNMODIFIED_SINCE: lshpack_static_hdr_idx = 43;
pub const LSHPACK_HDR_IF_RANGE: lshpack_static_hdr_idx = 42;
pub const LSHPACK_HDR_IF_NONE_MATCH: lshpack_static_hdr_idx = 41;
pub const LSHPACK_HDR_IF_MODIFIED_SINCE: lshpack_static_hdr_idx = 40;
pub const LSHPACK_HDR_IF_MATCH: lshpack_static_hdr_idx = 39;
pub const LSHPACK_HDR_HOST: lshpack_static_hdr_idx = 38;
pub const LSHPACK_HDR_FROM: lshpack_static_hdr_idx = 37;
pub const LSHPACK_HDR_EXPIRES: lshpack_static_hdr_idx = 36;
pub const LSHPACK_HDR_EXPECT: lshpack_static_hdr_idx = 35;
pub const LSHPACK_HDR_ETAG: lshpack_static_hdr_idx = 34;
pub const LSHPACK_HDR_DATE: lshpack_static_hdr_idx = 33;
pub const LSHPACK_HDR_COOKIE: lshpack_static_hdr_idx = 32;
pub const LSHPACK_HDR_CONTENT_TYPE: lshpack_static_hdr_idx = 31;
pub const LSHPACK_HDR_CONTENT_RANGE: lshpack_static_hdr_idx = 30;
pub const LSHPACK_HDR_CONTENT_LOCATION: lshpack_static_hdr_idx = 29;
pub const LSHPACK_HDR_CONTENT_LENGTH: lshpack_static_hdr_idx = 28;
pub const LSHPACK_HDR_CONTENT_LANGUAGE: lshpack_static_hdr_idx = 27;
pub const LSHPACK_HDR_CONTENT_ENCODING: lshpack_static_hdr_idx = 26;
pub const LSHPACK_HDR_CONTENT_DISPOSITION: lshpack_static_hdr_idx = 25;
pub const LSHPACK_HDR_CACHE_CONTROL: lshpack_static_hdr_idx = 24;
pub const LSHPACK_HDR_AUTHORIZATION: lshpack_static_hdr_idx = 23;
pub const LSHPACK_HDR_ALLOW: lshpack_static_hdr_idx = 22;
pub const LSHPACK_HDR_AGE: lshpack_static_hdr_idx = 21;
pub const LSHPACK_HDR_ACCESS_CONTROL_ALLOW_ORIGIN: lshpack_static_hdr_idx = 20;
pub const LSHPACK_HDR_ACCEPT: lshpack_static_hdr_idx = 19;
pub const LSHPACK_HDR_ACCEPT_RANGES: lshpack_static_hdr_idx = 18;
pub const LSHPACK_HDR_ACCEPT_LANGUAGE: lshpack_static_hdr_idx = 17;
pub const LSHPACK_HDR_ACCEPT_ENCODING: lshpack_static_hdr_idx = 16;
pub const LSHPACK_HDR_ACCEPT_CHARSET: lshpack_static_hdr_idx = 15;
pub const LSHPACK_HDR_STATUS_500: lshpack_static_hdr_idx = 14;
pub const LSHPACK_HDR_STATUS_404: lshpack_static_hdr_idx = 13;
pub const LSHPACK_HDR_STATUS_400: lshpack_static_hdr_idx = 12;
pub const LSHPACK_HDR_STATUS_304: lshpack_static_hdr_idx = 11;
pub const LSHPACK_HDR_STATUS_206: lshpack_static_hdr_idx = 10;
pub const LSHPACK_HDR_STATUS_204: lshpack_static_hdr_idx = 9;
pub const LSHPACK_HDR_STATUS_200: lshpack_static_hdr_idx = 8;
pub const LSHPACK_HDR_SCHEME_HTTPS: lshpack_static_hdr_idx = 7;
pub const LSHPACK_HDR_SCHEME_HTTP: lshpack_static_hdr_idx = 6;
pub const LSHPACK_HDR_PATH_INDEX_HTML: lshpack_static_hdr_idx = 5;
pub const LSHPACK_HDR_PATH: lshpack_static_hdr_idx = 4;
pub const LSHPACK_HDR_METHOD_POST: lshpack_static_hdr_idx = 3;
pub const LSHPACK_HDR_METHOD_GET: lshpack_static_hdr_idx = 2;
pub const LSHPACK_HDR_AUTHORITY: lshpack_static_hdr_idx = 1;
pub const LSHPACK_HDR_UNKNOWN: lshpack_static_hdr_idx = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct C2RustUnnamed_1 {
    pub name_len: libc::c_uint,
    pub val_len: libc::c_uint,
    pub name: *const libc::c_char,
    pub val: *const libc::c_char,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct encode_el {
    pub code: uint32_t,
    pub bits: libc::c_int,
}
pub type XXH32_hash_t = uint32_t;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct dec_table_entry {
    pub dte_name_len: libc::c_uint,
    pub dte_val_len: libc::c_uint,
    pub dte_name_idx: uint8_t,
    pub dte_buf: [libc::c_char; 0],
}
pub const LSHPACK_ADD_INDEX: C2RustUnnamed_3 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct decode_status {
    pub state: uint8_t,
    pub eos: uint8_t,
}
pub const HPACK_HUFFMAN_FLAG_ACCEPTED: C2RustUnnamed_2 = 1;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct decode_el {
    pub state: uint8_t,
    pub flags: uint8_t,
    pub sym: uint8_t,
}
pub const HPACK_HUFFMAN_FLAG_SYM: C2RustUnnamed_2 = 2;
pub const HPACK_HUFFMAN_FLAG_FAIL: C2RustUnnamed_2 = 4;
pub const LSHPACK_VAL_INDEX: C2RustUnnamed_3 = 3;
pub const LSHPACK_NO_INDEX: C2RustUnnamed_3 = 1;
pub const LSHPACK_NEVER_INDEX: C2RustUnnamed_3 = 2;
pub type C2RustUnnamed_2 = libc::c_uint;
pub type C2RustUnnamed_3 = libc::c_uint;
#[inline]
unsafe extern "C" fn lsxpack_header_get_value(
    mut hdr: *const lsxpack_header_t,
) -> *const libc::c_char {
    return ((*hdr).buf).offset((*hdr).val_offset as libc::c_int as isize);
}
#[inline]
unsafe extern "C" fn lsxpack_header_get_name(
    mut hdr: *const lsxpack_header_t,
) -> *const libc::c_char {
    return if (*hdr).name_len as libc::c_int != 0 {
        ((*hdr).buf).offset((*hdr).name_offset as libc::c_int as isize)
    } else {
        0 as *mut libc::c_char
    };
}
static mut encode_table: [encode_el; 257] = [
    {
        let mut init = encode_el {
            code: 0x1ff8 as libc::c_int as uint32_t,
            bits: 13 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffd8 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe2 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe3 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe4 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe5 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe6 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe7 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe8 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffea as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffffc as libc::c_int as uint32_t,
            bits: 30 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffe9 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffea as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffffd as libc::c_int as uint32_t,
            bits: 30 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffeb as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffec as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffed as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffee as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffffef as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff0 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff1 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff2 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffffe as libc::c_int as uint32_t,
            bits: 30 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff3 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff4 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff5 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff6 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff7 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff8 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffff9 as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffffa as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffffb as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x14 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3f8 as libc::c_int as uint32_t,
            bits: 10 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3f9 as libc::c_int as uint32_t,
            bits: 10 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffa as libc::c_int as uint32_t,
            bits: 12 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ff9 as libc::c_int as uint32_t,
            bits: 13 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x15 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xf8 as libc::c_int as uint32_t,
            bits: 8 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fa as libc::c_int as uint32_t,
            bits: 11 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fa as libc::c_int as uint32_t,
            bits: 10 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fb as libc::c_int as uint32_t,
            bits: 10 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xf9 as libc::c_int as uint32_t,
            bits: 8 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fb as libc::c_int as uint32_t,
            bits: 11 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfa as libc::c_int as uint32_t,
            bits: 8 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x16 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x17 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x18 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x2 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x19 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1a as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1b as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1c as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1d as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1e as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1f as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x5c as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfb as libc::c_int as uint32_t,
            bits: 8 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffc as libc::c_int as uint32_t,
            bits: 15 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x20 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffb as libc::c_int as uint32_t,
            bits: 12 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fc as libc::c_int as uint32_t,
            bits: 10 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffa as libc::c_int as uint32_t,
            bits: 13 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x21 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x5d as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x5e as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x5f as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x60 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x61 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x62 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x63 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x64 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x65 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x66 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x67 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x68 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x69 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6a as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6b as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6c as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6d as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6e as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6f as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x70 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x71 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x72 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfc as libc::c_int as uint32_t,
            bits: 8 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x73 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfd as libc::c_int as uint32_t,
            bits: 8 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffb as libc::c_int as uint32_t,
            bits: 13 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fff0 as libc::c_int as uint32_t,
            bits: 19 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffc as libc::c_int as uint32_t,
            bits: 13 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffc as libc::c_int as uint32_t,
            bits: 14 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x22 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffd as libc::c_int as uint32_t,
            bits: 15 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x23 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x4 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x24 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x5 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x25 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x26 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x27 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x6 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x74 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x75 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x28 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x29 as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x2a as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x2b as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x76 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x2c as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x8 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x9 as libc::c_int as uint32_t,
            bits: 5 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x2d as libc::c_int as uint32_t,
            bits: 6 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x77 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x78 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x79 as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7a as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7b as libc::c_int as uint32_t,
            bits: 7 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffe as libc::c_int as uint32_t,
            bits: 15 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fc as libc::c_int as uint32_t,
            bits: 11 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffd as libc::c_int as uint32_t,
            bits: 14 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffd as libc::c_int as uint32_t,
            bits: 13 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffffc as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffe6 as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd2 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffe7 as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffe8 as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd3 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd4 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd5 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffd9 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd6 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffda as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffdb as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffdc as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffdd as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffde as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffeb as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffdf as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffec as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffed as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd7 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe0 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffee as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe1 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe2 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe3 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe4 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffdc as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd8 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe5 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffd9 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe6 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe7 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffef as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffda as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffdd as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffe9 as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffdb as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffdc as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe8 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffe9 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffde as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffea as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffdd as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffde as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffff0 as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffdf as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffdf as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffeb as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffec as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe0 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe1 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe0 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe2 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffed as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe1 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffee as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffef as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffea as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe2 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe3 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe4 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffff0 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe5 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe6 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffff1 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe0 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe1 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffeb as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fff1 as libc::c_int as uint32_t,
            bits: 19 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe7 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffff2 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe8 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffffec as libc::c_int as uint32_t,
            bits: 25 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe2 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe3 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe4 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffde as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffdf as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe5 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffff1 as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffffed as libc::c_int as uint32_t,
            bits: 25 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fff2 as libc::c_int as uint32_t,
            bits: 19 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe3 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe6 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe0 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe1 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe7 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe2 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffff2 as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe4 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe5 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe8 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffe9 as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffffd as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe3 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe4 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe5 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffec as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffff3 as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffed as libc::c_int as uint32_t,
            bits: 20 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe6 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffe9 as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe7 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1fffe8 as libc::c_int as uint32_t,
            bits: 21 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffff3 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffea as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffeb as libc::c_int as uint32_t,
            bits: 22 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffffee as libc::c_int as uint32_t,
            bits: 25 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x1ffffef as libc::c_int as uint32_t,
            bits: 25 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffff4 as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xfffff5 as libc::c_int as uint32_t,
            bits: 24 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffea as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffff4 as libc::c_int as uint32_t,
            bits: 23 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffeb as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe6 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffec as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffed as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe7 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe8 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffe9 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffea as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffeb as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0xffffffe as libc::c_int as uint32_t,
            bits: 28 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffec as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffed as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffee as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7ffffef as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x7fffff0 as libc::c_int as uint32_t,
            bits: 27 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3ffffee as libc::c_int as uint32_t,
            bits: 26 as libc::c_int,
        };
        init
    },
    {
        let mut init = encode_el {
            code: 0x3fffffff as libc::c_int as uint32_t,
            bits: 30 as libc::c_int,
        };
        init
    },
];
static mut decode_tables: [[decode_el; 16]; 256] = [
    [
        {
            let mut init = decode_el {
                state: 4 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 5 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 7 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 8 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 11 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 12 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 16 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 19 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 25 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 28 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 32 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 35 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 42 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 49 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 57 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 64 as libc::c_int as uint8_t,
                flags: 0x1 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 13 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 14 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 17 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 18 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 20 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 21 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 48 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 49 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 50 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 97 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 99 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 101 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 105 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 111 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 115 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 116 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 32 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 37 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 45 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 46 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 47 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 51 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 52 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 53 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 54 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 55 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 56 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 57 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 26 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 27 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 29 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 30 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 33 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 34 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 36 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 37 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 43 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 46 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 50 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 53 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 58 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 61 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 65 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 68 as libc::c_int as uint8_t,
                flags: 0x1 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 38 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 39 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 61 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 65 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 95 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 98 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 100 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 102 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 103 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 104 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 108 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 109 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 110 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 112 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 114 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 117 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 58 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 66 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 67 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 68 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 44 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 45 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 47 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 48 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 51 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 52 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 54 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 55 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 59 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 60 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 62 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 63 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 66 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 67 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 69 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 72 as libc::c_int as uint8_t,
                flags: 0x1 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 69 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 70 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 71 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 72 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 73 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 74 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 75 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 76 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 77 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 78 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 79 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 80 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 81 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 82 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 83 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 84 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 70 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 71 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 73 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 74 as libc::c_int as uint8_t,
                flags: 0x1 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 85 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 86 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 87 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 89 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 106 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 107 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 113 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 118 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 75 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 78 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 119 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 120 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 121 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 122 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 76 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 77 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 79 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 81 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 38 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 42 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 44 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 59 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 80 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 82 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 84 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 88 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 90 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 83 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 85 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 88 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 33 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 34 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 40 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 41 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 86 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 87 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 89 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 90 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 63 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 39 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 43 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 91 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 92 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 124 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 35 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 62 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 93 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 94 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 36 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 64 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 91 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 95 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 93 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 126 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 96 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 110 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 94 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 125 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 97 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 101 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 111 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 133 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 60 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 96 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 123 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 98 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 99 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 102 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 105 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 112 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 119 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 134 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 153 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 100 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 103 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 104 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 106 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 107 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 113 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 116 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 120 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 126 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 135 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 142 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 154 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 169 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 108 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 109 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 92 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 195 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 208 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 128 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 130 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 131 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 162 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 184 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 194 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 224 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 226 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 153 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 161 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 167 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 172 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 114 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 115 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 117 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 118 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 121 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 123 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 127 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 130 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 136 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 139 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 143 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 146 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 155 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 162 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 170 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 180 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 122 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 124 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 125 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 128 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 129 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 131 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 132 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 176 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 177 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 179 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 209 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 216 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 217 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 227 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 229 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 230 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 129 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 132 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 133 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 134 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 136 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 146 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 154 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 156 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 160 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 163 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 164 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 169 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 170 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 173 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 137 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 138 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 140 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 141 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 144 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 145 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 147 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 150 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 156 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 159 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 163 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 166 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 171 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 174 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 181 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 190 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 148 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 149 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 151 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 152 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 178 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 181 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 185 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 186 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 187 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 189 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 190 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 196 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 198 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 228 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 232 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 233 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 1 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 135 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 137 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 138 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 139 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 140 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 141 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 143 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 157 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 158 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 160 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 161 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 164 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 165 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 167 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 168 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 172 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 173 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 175 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 177 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 182 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 185 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 191 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 207 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 147 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 149 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 150 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 151 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 152 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 155 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 157 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 158 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 165 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 166 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 168 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 174 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 175 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 180 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 182 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 183 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 176 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 178 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 179 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 183 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 184 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 186 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 187 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 192 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 199 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 208 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 223 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 188 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 191 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 197 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 231 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 239 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 9 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 142 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 144 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 145 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 148 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 159 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 188 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 189 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 193 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 196 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 200 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 203 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 209 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 216 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 224 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 238 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 171 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 206 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 215 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 225 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 236 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 237 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 199 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 207 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 234 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 235 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 194 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 195 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 197 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 198 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 201 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 202 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 204 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 205 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 210 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 213 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 217 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 220 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 225 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 231 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 239 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 246 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 206 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 192 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 193 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 200 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 201 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 202 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 205 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 210 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 213 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 218 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 219 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 238 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 240 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 242 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 243 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 255 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 203 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 204 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 211 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 212 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 214 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 215 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 218 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 219 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 221 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 222 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 226 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 228 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 232 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 235 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 240 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 243 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 247 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 250 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 211 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 212 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 214 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 221 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 222 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 223 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 241 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 244 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 245 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 246 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 247 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 248 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 250 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 251 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 252 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 253 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 227 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 229 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 230 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 233 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 234 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 236 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 237 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 241 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 242 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 244 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 245 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 248 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 249 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 251 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 252 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 254 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 2 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 3 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 4 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 5 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 6 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 7 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 8 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 11 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 12 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 14 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 15 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 16 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 17 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 18 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 253 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 19 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 20 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 21 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 23 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 24 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 25 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 26 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 27 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 254 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 255 as libc::c_int as uint8_t,
                flags: 0 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 28 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 29 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 30 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 31 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 127 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 220 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 249 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 1 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 22 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 2 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 9 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 23 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 40 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 10 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 13 as libc::c_int as uint8_t,
            };
            init
        },
    ],
    [
        {
            let mut init = decode_el {
                state: 3 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 6 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 10 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 15 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 24 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 31 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 41 as libc::c_int as uint8_t,
                flags: 0x2 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 56 as libc::c_int as uint8_t,
                flags: 0x3 as libc::c_int as uint8_t,
                sym: 22 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
        {
            let mut init = decode_el {
                state: 0 as libc::c_int as uint8_t,
                flags: 0x4 as libc::c_int as uint8_t,
                sym: 0 as libc::c_int as uint8_t,
            };
            init
        },
    ],
];
static mut static_table: [C2RustUnnamed_1; 61] = [C2RustUnnamed_1 {
    name_len: 0,
    val_len: 0,
    name: 0 as *const libc::c_char,
    val: 0 as *const libc::c_char,
}; 61];
static mut static_table_name_hash: [uint32_t; 61] = [
    0x653a915b as libc::c_uint,
    0xc7742be4 as libc::c_uint,
    0xc7742be4 as libc::c_uint,
    0x3513518d as libc::c_uint,
    0x3513518d as libc::c_uint,
    0xf49f1451 as libc::c_uint,
    0xf49f1451 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0x672bda53 as libc::c_uint,
    0xcd2c0296 as libc::c_uint,
    0xf93ad8a9 as libc::c_uint,
    0x98bd32d3 as libc::c_uint,
    0x1dc691c8 as libc::c_uint,
    0x1ab214f8 as libc::c_uint,
    0x7d3b7a3b as libc::c_uint,
    0xbec8e440 as libc::c_uint,
    0xe9c1d9e1 as libc::c_uint,
    0x19d88141 as libc::c_uint,
    0xc25511f2 as libc::c_uint,
    0x16020a90 as libc::c_uint,
    0x48011191 as libc::c_uint,
    0x7d9aab7e as libc::c_uint,
    0x48f5cc19 as libc::c_uint,
    0x8847a08c as libc::c_uint,
    0xd19f766 as libc::c_uint,
    0x85ef7c5 as libc::c_uint,
    0xb486ed8 as libc::c_uint,
    0x1a7aa369 as libc::c_uint,
    0x6de855ba as libc::c_uint,
    0xa6006efd as libc::c_uint,
    0xa1bb4284 as libc::c_uint,
    0xae56e25f as libc::c_uint,
    0xb6787110 as libc::c_uint,
    0x791c6a0d as libc::c_uint,
    0xf2badabe as libc::c_uint,
    0xd8ca2594 as libc::c_uint,
    0xfba64c54 as libc::c_uint,
    0x4beb0951 as libc::c_uint,
    0x6b86c0b5 as libc::c_uint,
    0xc62fecd2 as libc::c_uint,
    0x8da64a26 as libc::c_uint,
    0x6ca35045 as libc::c_uint,
    0xf614d165 as libc::c_uint,
    0xe4d1df14 as libc::c_uint,
    0xb396750a as libc::c_uint,
    0x1f10233 as libc::c_uint,
    0x798bee18 as libc::c_uint,
    0x5239f142 as libc::c_uint,
    0x82e1b4e1 as libc::c_uint,
    0x8f7e493e as libc::c_uint,
    0x85e74c58 as libc::c_uint,
    0xbd17f160 as libc::c_uint,
    0x34c0456a as libc::c_uint,
    0x1a04df3d as libc::c_uint,
    0xb1b15ab2 as libc::c_uint,
    0xdddab6ff as libc::c_uint,
];
static mut static_table_nameval_hash: [uint32_t; 61] = [
    0xf8614896 as libc::c_uint,
    0x25d95a15 as libc::c_uint,
    0x33968bb7 as libc::c_uint,
    0xc8c267f6 as libc::c_uint,
    0x8351136f as libc::c_uint,
    0x98573f68 as libc::c_uint,
    0x16dde443 as libc::c_uint,
    0x352a6556 as libc::c_uint,
    0xd4f462d2 as libc::c_uint,
    0x125e66e0 as libc::c_uint,
    0xd7988bc9 as libc::c_uint,
    0x4c3c90de as libc::c_uint,
    0x65e6eca1 as libc::c_uint,
    0xb05b7b87 as libc::c_uint,
    0x96816317 as libc::c_uint,
    0x8bbf5398 as libc::c_uint,
    0x97e01849 as libc::c_uint,
    0xd7b48dd4 as libc::c_uint,
    0x9c180569 as libc::c_uint,
    0xc7c63b45 as libc::c_uint,
    0xf4223ee5 as libc::c_uint,
    0x12c8a744 as libc::c_uint,
    0xaa95a0bc as libc::c_uint,
    0x14f65730 as libc::c_uint,
    0x8410a906 as libc::c_uint,
    0x98f440dd as libc::c_uint,
    0x627e4803 as libc::c_uint,
    0x5a5cc325 as libc::c_uint,
    0x137fc223 as libc::c_uint,
    0x1529262f as libc::c_uint,
    0x7950b9bd as libc::c_uint,
    0x51d448a4 as libc::c_uint,
    0x52c167cf as libc::c_uint,
    0xfb22aa54 as libc::c_uint,
    0x540db9fe as libc::c_uint,
    0x75a6c685 as libc::c_uint,
    0xe1c54196 as libc::c_uint,
    0xdc0c3733 as libc::c_uint,
    0x6d78cb84 as libc::c_uint,
    0x4f5272cd as libc::c_uint,
    0x9d4170e4 as libc::c_uint,
    0xd4e28ba1 as libc::c_uint,
    0x28c7846 as libc::c_uint,
    0x4e8c1dc3 as libc::c_uint,
    0x684bddbc as libc::c_uint,
    0xe113a2b0 as libc::c_uint,
    0x55f7bbd1 as libc::c_uint,
    0x15bd3710 as libc::c_uint,
    0xe82b715d as libc::c_uint,
    0x3674bc1f as libc::c_uint,
    0x5010d24b as libc::c_uint,
    0x953de1cb as libc::c_uint,
    0x9f2c92d9 as libc::c_uint,
    0xb2de5570 as libc::c_uint,
    0xbca5998f as libc::c_uint,
    0xff5b88e as libc::c_uint,
    0x1fed156b as libc::c_uint,
    0xdc83e7ec as libc::c_uint,
    0x7b79e35 as libc::c_uint,
    0xa6d145a9 as libc::c_uint,
    0x43638cba as libc::c_uint,
];
unsafe extern "C" fn lshpack_arr_push(
    mut arr: *mut lshpack_arr,
    mut val: uintptr_t,
) -> libc::c_int {
    let mut new_els: *mut uintptr_t = 0 as *mut uintptr_t;
    let mut n: libc::c_uint = 0;
    if ((*arr).off).wrapping_add((*arr).nelem) < (*arr).nalloc {
        *((*arr).els).offset(((*arr).off).wrapping_add((*arr).nelem) as isize) = val;
        (*arr).nelem = ((*arr).nelem).wrapping_add(1);
        return 0 as libc::c_int;
    }
    if (*arr).off > ((*arr).nalloc).wrapping_div(2 as libc::c_int as libc::c_uint) {
        memmove(
            (*arr).els as *mut libc::c_void,
            ((*arr).els).offset((*arr).off as isize) as *const libc::c_void,
            (::std::mem::size_of::<uintptr_t>() as libc::c_ulong)
                .wrapping_mul((*arr).nelem as libc::c_ulong),
        );
        (*arr).off = 0 as libc::c_int as libc::c_uint;
        *((*arr).els).offset((*arr).nelem as isize) = val;
        (*arr).nelem = ((*arr).nelem).wrapping_add(1);
        return 0 as libc::c_int;
    }
    if (*arr).nalloc != 0 {
        n = ((*arr).nalloc).wrapping_mul(2 as libc::c_int as libc::c_uint);
    } else {
        n = 64 as libc::c_int as libc::c_uint;
    }
    new_els = malloc(
        (n as libc::c_ulong)
            .wrapping_mul(::std::mem::size_of::<uintptr_t>() as libc::c_ulong),
    ) as *mut uintptr_t;
    if new_els.is_null() {
        return -(1 as libc::c_int);
    }
    memcpy(
        new_els as *mut libc::c_void,
        ((*arr).els).offset((*arr).off as isize) as *const libc::c_void,
        (::std::mem::size_of::<uintptr_t>() as libc::c_ulong)
            .wrapping_mul((*arr).nelem as libc::c_ulong),
    );
    free((*arr).els as *mut libc::c_void);
    (*arr).off = 0 as libc::c_int as libc::c_uint;
    (*arr).els = new_els;
    (*arr).nalloc = n;
    *((*arr).els).offset(((*arr).off).wrapping_add((*arr).nelem) as isize) = val;
    (*arr).nelem = ((*arr).nelem).wrapping_add(1);
    return 0 as libc::c_int;
}
unsafe extern "C" fn henc_hist_size(mut max_capacity: libc::c_uint) -> libc::c_uint {
    return max_capacity
        .wrapping_div(32 as libc::c_int as libc::c_uint)
        .wrapping_div(3 as libc::c_int as libc::c_uint);
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_init(mut enc: *mut lshpack_enc) -> libc::c_int {
    let mut buckets: *mut lshpack_double_enc_head = 0 as *mut lshpack_double_enc_head;
    let mut nbits: libc::c_uint = 2 as libc::c_int as libc::c_uint;
    let mut i: libc::c_uint = 0;
    buckets = malloc(
        (::std::mem::size_of::<lshpack_double_enc_head>() as libc::c_ulong)
            .wrapping_mul(((1 as libc::c_uint) << nbits) as libc::c_ulong),
    ) as *mut lshpack_double_enc_head;
    if buckets.is_null() {
        return -(1 as libc::c_int);
    }
    i = 0 as libc::c_int as libc::c_uint;
    while i < (1 as libc::c_uint) << nbits {
        let ref mut fresh0 = (*buckets.offset(i as isize)).by_name.stqh_first;
        *fresh0 = 0 as *mut lshpack_enc_table_entry;
        let ref mut fresh1 = (*buckets.offset(i as isize)).by_name.stqh_last;
        *fresh1 = &mut (*buckets.offset(i as isize)).by_name.stqh_first;
        let ref mut fresh2 = (*buckets.offset(i as isize)).by_nameval.stqh_first;
        *fresh2 = 0 as *mut lshpack_enc_table_entry;
        let ref mut fresh3 = (*buckets.offset(i as isize)).by_nameval.stqh_last;
        *fresh3 = &mut (*buckets.offset(i as isize)).by_nameval.stqh_first;
        i = i.wrapping_add(1);
    }
    memset(
        enc as *mut libc::c_void,
        0 as libc::c_int,
        ::std::mem::size_of::<lshpack_enc>() as libc::c_ulong,
    );
    (*enc).hpe_all_entries.stqh_first = 0 as *mut lshpack_enc_table_entry;
    (*enc).hpe_all_entries.stqh_last = &mut (*enc).hpe_all_entries.stqh_first;
    (*enc).hpe_max_capacity = 4096 as libc::c_int as libc::c_uint;
    (*enc).hpe_buckets = buckets;
    (*enc).hpe_next_id = (!(0 as libc::c_int) - 3 as libc::c_int) as libc::c_uint;
    (*enc).hpe_nbits = nbits;
    (*enc).hpe_nelem = 0 as libc::c_int as libc::c_uint;
    return 0 as libc::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_cleanup(mut enc: *mut lshpack_enc) {
    let mut entry: *mut lshpack_enc_table_entry = 0 as *mut lshpack_enc_table_entry;
    let mut next: *mut lshpack_enc_table_entry = 0 as *mut lshpack_enc_table_entry;
    entry = (*enc).hpe_all_entries.stqh_first;
    while !entry.is_null() {
        next = (*entry).ete_next_all.stqe_next;
        free(entry as *mut libc::c_void);
        entry = next;
    }
    free((*enc).hpe_hist_buf as *mut libc::c_void);
    free((*enc).hpe_buckets as *mut libc::c_void);
}
unsafe extern "C" fn henc_use_hist(mut enc: *mut lshpack_enc) -> libc::c_int {
    let mut hist_size: libc::c_uint = 0;
    if !((*enc).hpe_hist_buf).is_null() {
        return 0 as libc::c_int;
    }
    hist_size = henc_hist_size(4096 as libc::c_int as libc::c_uint);
    if hist_size == 0 {
        return 0 as libc::c_int;
    }
    (*enc)
        .hpe_hist_buf = malloc(
        (::std::mem::size_of::<uint32_t>() as libc::c_ulong)
            .wrapping_mul(
                hist_size.wrapping_add(1 as libc::c_int as libc::c_uint) as libc::c_ulong,
            ),
    ) as *mut uint32_t;
    if ((*enc).hpe_hist_buf).is_null() {
        return -(1 as libc::c_int);
    }
    (*enc).hpe_hist_size = hist_size;
    (*enc)
        .hpe_flags = ::std::mem::transmute::<
        libc::c_uint,
        C2RustUnnamed,
    >(
        (*enc).hpe_flags as libc::c_uint
            | LSHPACK_ENC_USE_HIST as libc::c_int as libc::c_uint,
    );
    return 0 as libc::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_use_hist(
    mut enc: *mut lshpack_enc,
    mut on: libc::c_int,
) -> libc::c_int {
    if on != 0 {
        return henc_use_hist(enc)
    } else {
        (*enc)
            .hpe_flags = ::std::mem::transmute::<
            libc::c_uint,
            C2RustUnnamed,
        >(
            (*enc).hpe_flags as libc::c_uint
                & !(LSHPACK_ENC_USE_HIST as libc::c_int) as libc::c_uint,
        );
        free((*enc).hpe_hist_buf as *mut libc::c_void);
        (*enc).hpe_hist_buf = 0 as *mut uint32_t;
        (*enc).hpe_hist_size = 0 as libc::c_int as libc::c_uint;
        (*enc).hpe_hist_idx = 0 as libc::c_int as libc::c_uint;
        (*enc).hpe_hist_wrapped = 0 as libc::c_int;
        return 0 as libc::c_int;
    };
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_hist_used(
    mut enc: *const lshpack_enc,
) -> libc::c_int {
    return ((*enc).hpe_flags as libc::c_uint
        & LSHPACK_ENC_USE_HIST as libc::c_int as libc::c_uint
        != 0 as libc::c_int as libc::c_uint) as libc::c_int;
}
static mut nameval2id: [libc::c_uchar; 512] = [
    0,
    0,
    0,
    27 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    2 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    50 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    29 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    30 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    59 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    7 as libc::c_int as libc::c_uchar,
    0,
    0,
    43 as libc::c_int as libc::c_uchar,
    0,
    0,
    17 as libc::c_int as libc::c_uchar,
    0,
    51 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    34 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    36 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    56 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    13 as libc::c_int as libc::c_uchar,
    0,
    0,
    32 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    46 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    61 as libc::c_int as libc::c_uchar,
    0,
    23 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    40 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    9 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    53 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    26 as libc::c_int as libc::c_uchar,
    12 as libc::c_int as libc::c_uchar,
    0,
    10 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    41 as libc::c_int as libc::c_uchar,
    21 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    25 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    15 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    28 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24 as libc::c_int as libc::c_uchar,
    0,
    0,
    38 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    22 as libc::c_int as libc::c_uchar,
    20 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    8 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    49 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    6 as libc::c_int as libc::c_uchar,
    19 as libc::c_int as libc::c_uchar,
    0,
    57 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    5 as libc::c_int as libc::c_uchar,
    54 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    39 as libc::c_int as libc::c_uchar,
    0,
    0,
    14 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    55 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    37 as libc::c_int as libc::c_uchar,
    0,
    16 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    42 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    60 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    3 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    45 as libc::c_int as libc::c_uchar,
    31 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    44 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    11 as libc::c_int as libc::c_uchar,
    0,
    52 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    33 as libc::c_int as libc::c_uchar,
    0,
    47 as libc::c_int as libc::c_uchar,
    0,
    0,
    18 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    58 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    4 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    35 as libc::c_int as libc::c_uchar,
    0,
];
static mut name2id: [libc::c_uchar; 512] = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    39 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    52 as libc::c_int as libc::c_uchar,
    28 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    46 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    51 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    20 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    21 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    47 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    6 as libc::c_int as libc::c_uchar,
    0,
    8 as libc::c_int as libc::c_uchar,
    42 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    56 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    37 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    36 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    29 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    25 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    15 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    16 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    60 as libc::c_int as libc::c_uchar,
    0,
    0,
    44 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    40 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    45 as libc::c_int as libc::c_uchar,
    17 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    32 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    54 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    19 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    35 as libc::c_int as libc::c_uchar,
    0,
    61 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    50 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    38 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    49 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    59 as libc::c_int as libc::c_uchar,
    55 as libc::c_int as libc::c_uchar,
    0,
    0,
    23 as libc::c_int as libc::c_uchar,
    53 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    43 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    57 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    48 as libc::c_int as libc::c_uchar,
    30 as libc::c_int as libc::c_uchar,
    0,
    0,
    33 as libc::c_int as libc::c_uchar,
    58 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    27 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    4 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    26 as libc::c_int as libc::c_uchar,
    0,
    0,
    41 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    34 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    31 as libc::c_int as libc::c_uchar,
    0,
    0,
    18 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    22 as libc::c_int as libc::c_uchar,
    0,
    0,
    2 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24 as libc::c_int as libc::c_uchar,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
];
unsafe extern "C" fn lshpack_enc_get_static_nameval(
    mut input: *const lsxpack_header,
) -> libc::c_uint {
    let mut i: libc::c_uint = 0;
    i = (*input).nameval_hash >> 0 as libc::c_int
        & (((1 as libc::c_int) << 9 as libc::c_int) - 1 as libc::c_int) as libc::c_uint;
    if nameval2id[i as usize] != 0 {
        i = (nameval2id[i as usize] as libc::c_int - 1 as libc::c_int) as libc::c_uint;
        if static_table[i as usize].name_len == (*input).name_len as libc::c_uint
            && static_table[i as usize].val_len == (*input).val_len as libc::c_uint
            && memcmp(
                lsxpack_header_get_name(input) as *const libc::c_void,
                static_table[i as usize].name as *const libc::c_void,
                (*input).name_len as libc::c_ulong,
            ) == 0 as libc::c_int
            && memcmp(
                lsxpack_header_get_value(input) as *const libc::c_void,
                static_table[i as usize].val as *const libc::c_void,
                (*input).val_len as libc::c_ulong,
            ) == 0 as libc::c_int
        {
            return i.wrapping_add(1 as libc::c_int as libc::c_uint);
        }
    }
    return 0 as libc::c_int as libc::c_uint;
}
unsafe extern "C" fn lshpack_enc_get_static_name(
    mut input: *const lsxpack_header,
) -> libc::c_uint {
    let mut i: libc::c_uint = 0;
    i = (*input).name_hash >> 0 as libc::c_int
        & (((1 as libc::c_int) << 9 as libc::c_int) - 1 as libc::c_int) as libc::c_uint;
    if name2id[i as usize] != 0 {
        i = (name2id[i as usize] as libc::c_int - 1 as libc::c_int) as libc::c_uint;
        if static_table[i as usize].name_len == (*input).name_len as libc::c_uint
            && memcmp(
                lsxpack_header_get_name(input) as *const libc::c_void,
                static_table[i as usize].name as *const libc::c_void,
                (*input).name_len as libc::c_ulong,
            ) == 0 as libc::c_int
        {
            return i.wrapping_add(1 as libc::c_int as libc::c_uint);
        }
    }
    return 0 as libc::c_int as libc::c_uint;
}
unsafe extern "C" fn update_hash(mut input: *mut lsxpack_header) {
    if (*input).flags() as libc::c_int & LSXPACK_NAME_HASH as libc::c_int == 0 {
        (*input)
            .name_hash = XXH32(
            lsxpack_header_get_name(input) as *const libc::c_void,
            (*input).name_len as size_t,
            39378473 as libc::c_int as XXH32_hash_t,
        );
    }
    if (*input).flags() as libc::c_int & LSXPACK_NAMEVAL_HASH as libc::c_int == 0 {
        (*input)
            .nameval_hash = XXH32(
            ((*input).buf).offset((*input).val_offset as libc::c_int as isize)
                as *const libc::c_void,
            (*input).val_len as size_t,
            (*input).name_hash,
        );
    }
    (*input)
        .set_flags(
            (*input).flags()
                | (LSXPACK_NAME_HASH as libc::c_int
                    | LSXPACK_NAMEVAL_HASH as libc::c_int) as lsxpack_flag,
        );
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_get_stx_tab_id(
    mut input: *mut lsxpack_header,
) -> libc::c_uint {
    let mut i: libc::c_uint = 0;
    update_hash(input);
    i = (*input).nameval_hash >> 0 as libc::c_int
        & (((1 as libc::c_int) << 9 as libc::c_int) - 1 as libc::c_int) as libc::c_uint;
    if nameval2id[i as usize] != 0 {
        i = (nameval2id[i as usize] as libc::c_int - 1 as libc::c_int) as libc::c_uint;
        if static_table[i as usize].name_len == (*input).name_len as libc::c_uint
            && static_table[i as usize].val_len == (*input).val_len as libc::c_uint
            && memcmp(
                lsxpack_header_get_name(input) as *const libc::c_void,
                static_table[i as usize].name as *const libc::c_void,
                (*input).name_len as libc::c_ulong,
            ) == 0 as libc::c_int
            && memcmp(
                ((*input).buf).offset((*input).val_offset as libc::c_int as isize)
                    as *const libc::c_void,
                static_table[i as usize].val as *const libc::c_void,
                (*input).val_len as libc::c_ulong,
            ) == 0 as libc::c_int
        {
            return i.wrapping_add(1 as libc::c_int as libc::c_uint);
        }
    }
    i = (*input).name_hash >> 0 as libc::c_int
        & (((1 as libc::c_int) << 9 as libc::c_int) - 1 as libc::c_int) as libc::c_uint;
    if name2id[i as usize] != 0 {
        i = (name2id[i as usize] as libc::c_int - 1 as libc::c_int) as libc::c_uint;
        if static_table[i as usize].name_len == (*input).name_len as libc::c_uint
            && memcmp(
                lsxpack_header_get_name(input) as *const libc::c_void,
                static_table[i as usize].name as *const libc::c_void,
                (*input).name_len as libc::c_ulong,
            ) == 0 as libc::c_int
        {
            return i.wrapping_add(1 as libc::c_int as libc::c_uint);
        }
    }
    return 0 as libc::c_int as libc::c_uint;
}
unsafe extern "C" fn henc_calc_table_id(
    mut enc: *const lshpack_enc,
    mut entry: *const lshpack_enc_table_entry,
) -> libc::c_uint {
    return (61 as libc::c_int as libc::c_uint)
        .wrapping_add(((*enc).hpe_next_id).wrapping_sub((*entry).ete_id));
}
unsafe extern "C" fn henc_find_table_id(
    mut enc: *mut lshpack_enc,
    mut input: *mut lsxpack_header_t,
    mut val_matched: *mut libc::c_int,
) -> libc::c_uint {
    let mut entry: *mut lshpack_enc_table_entry = 0 as *mut lshpack_enc_table_entry;
    let mut buckno: libc::c_uint = 0;
    let mut id: libc::c_uint = 0;
    let mut val_ptr: *const libc::c_char = ((*input).buf)
        .offset((*input).val_offset as libc::c_int as isize);
    let mut name: *const libc::c_char = 0 as *const libc::c_char;
    let mut name_len: libc::c_uint = 0;
    name_len = (*input).name_len as libc::c_uint;
    name = lsxpack_header_get_name(input);
    if (*input).hpack_index != 0 {
        id = ((*input).hpack_index as libc::c_int - 1 as libc::c_int) as libc::c_uint;
        if id <= LSHPACK_HDR_ACCEPT_ENCODING as libc::c_int as libc::c_uint
            || (*input).val_len as libc::c_int == 0 as libc::c_int
        {
            if static_table[id as usize].val_len == (*input).val_len as libc::c_uint
                && memcmp(
                    val_ptr as *const libc::c_void,
                    static_table[id as usize].val as *const libc::c_void,
                    (*input).val_len as libc::c_ulong,
                ) == 0 as libc::c_int
            {
                (*input)
                    .set_flags(
                        (*input).flags()
                            | LSXPACK_HPACK_VAL_MATCHED as libc::c_int as lsxpack_flag,
                    );
                *val_matched = 1 as libc::c_int;
                return (*input).hpack_index as libc::c_uint;
            }
        }
        if name_len == 0 {
            name = static_table[id as usize].name;
            name_len = static_table[id as usize].name_len;
        }
        if (*input).flags() as libc::c_int & LSXPACK_NAME_HASH as libc::c_int == 0 {
            (*input).name_hash = static_table_name_hash[id as usize];
        }
        if (*input).flags() as libc::c_int & LSXPACK_NAMEVAL_HASH as libc::c_int == 0 {
            (*input)
                .nameval_hash = XXH32(
                val_ptr as *const libc::c_void,
                (*input).val_len as size_t,
                (*input).name_hash,
            );
        }
        (*input)
            .set_flags(
                (*input).flags()
                    | (LSXPACK_NAME_HASH as libc::c_int
                        | LSXPACK_NAMEVAL_HASH as libc::c_int) as lsxpack_flag,
            );
    } else {
        update_hash(input);
        (*input).hpack_index = lshpack_enc_get_static_nameval(input) as uint8_t;
        if (*input).hpack_index as libc::c_int != LSHPACK_HDR_UNKNOWN as libc::c_int {
            (*input)
                .set_flags(
                    (*input).flags()
                        | LSXPACK_HPACK_VAL_MATCHED as libc::c_int as lsxpack_flag,
                );
            *val_matched = 1 as libc::c_int;
            return (*input).hpack_index as libc::c_uint;
        }
    }
    buckno = (*input).nameval_hash
        & ((1 as libc::c_uint) << (*enc).hpe_nbits)
            .wrapping_sub(1 as libc::c_int as libc::c_uint);
    entry = (*((*enc).hpe_buckets).offset(buckno as isize)).by_nameval.stqh_first;
    while !entry.is_null() {
        if (*input).nameval_hash == (*entry).ete_nameval_hash
            && name_len == (*entry).ete_name_len
            && (*input).val_len as libc::c_uint == (*entry).ete_val_len
            && 0 as libc::c_int
                == memcmp(
                    name as *const libc::c_void,
                    ((*entry).ete_buf).as_mut_ptr() as *const libc::c_void,
                    name_len as libc::c_ulong,
                )
            && 0 as libc::c_int
                == memcmp(
                    val_ptr as *const libc::c_void,
                    &mut *((*entry).ete_buf)
                        .as_mut_ptr()
                        .offset((*entry).ete_name_len as isize) as *mut libc::c_char
                        as *const libc::c_void,
                    (*input).val_len as libc::c_ulong,
                )
        {
            *val_matched = 1 as libc::c_int;
            return henc_calc_table_id(enc, entry);
        }
        entry = (*entry).ete_next_nameval.stqe_next;
    }
    if (*input).hpack_index as libc::c_int == LSHPACK_HDR_UNKNOWN as libc::c_int {
        (*input).hpack_index = lshpack_enc_get_static_name(input) as uint8_t;
    }
    if (*input).hpack_index as libc::c_int != LSHPACK_HDR_UNKNOWN as libc::c_int {
        (*input)
            .set_flags(
                (*input).flags()
                    & !(LSXPACK_HPACK_VAL_MATCHED as libc::c_int) as lsxpack_flag,
            );
        return (*input).hpack_index as libc::c_uint;
    }
    buckno = (*input).name_hash
        & ((1 as libc::c_uint) << (*enc).hpe_nbits)
            .wrapping_sub(1 as libc::c_int as libc::c_uint);
    entry = (*((*enc).hpe_buckets).offset(buckno as isize)).by_name.stqh_first;
    while !entry.is_null() {
        if (*input).name_hash == (*entry).ete_name_hash
            && (*input).name_len as libc::c_uint == (*entry).ete_name_len
            && 0 as libc::c_int
                == memcmp(
                    name as *const libc::c_void,
                    ((*entry).ete_buf).as_mut_ptr() as *const libc::c_void,
                    name_len as libc::c_ulong,
                )
        {
            (*input)
                .set_flags(
                    (*input).flags()
                        & !(LSXPACK_HPACK_VAL_MATCHED as libc::c_int) as lsxpack_flag,
                );
            return henc_calc_table_id(enc, entry);
        }
        entry = (*entry).ete_next_name.stqe_next;
    }
    return 0 as libc::c_int as libc::c_uint;
}
unsafe extern "C" fn lshpack_enc_enc_int(
    mut dst: *mut libc::c_uchar,
    end: *mut libc::c_uchar,
    mut value: uint32_t,
    mut prefix_bits: uint8_t,
) -> *mut libc::c_uchar {
    let dst_orig: *mut libc::c_uchar = dst;
    if value
        < (((1 as libc::c_int) << prefix_bits as libc::c_int) as uint32_t)
            .wrapping_sub(1 as libc::c_int as libc::c_uint)
    {
        let fresh4 = dst;
        dst = dst.offset(1);
        *fresh4 = (*fresh4 as libc::c_uint | value) as libc::c_uchar;
    } else {
        let fresh5 = dst;
        dst = dst.offset(1);
        *fresh5 = (*fresh5 as libc::c_int
            | ((1 as libc::c_int) << prefix_bits as libc::c_int) - 1 as libc::c_int)
            as libc::c_uchar;
        value = (value as libc::c_uint)
            .wrapping_sub(
                (((1 as libc::c_int) << prefix_bits as libc::c_int) - 1 as libc::c_int)
                    as libc::c_uint,
            ) as uint32_t as uint32_t;
        while value >= 128 as libc::c_int as libc::c_uint {
            if dst < end {
                let fresh6 = dst;
                dst = dst.offset(1);
                *fresh6 = (0x80 as libc::c_int as libc::c_uint | value) as libc::c_uchar;
                value >>= 7 as libc::c_int;
            } else {
                return dst_orig
            }
        }
        if dst < end {
            let fresh7 = dst;
            dst = dst.offset(1);
            *fresh7 = value as libc::c_uchar;
        } else {
            return dst_orig
        }
    }
    return dst;
}
unsafe extern "C" fn lshpack_enc_huff_encode(
    mut src: *const libc::c_uchar,
    src_end: *const libc::c_uchar,
    dst: *mut libc::c_uchar,
    mut dst_len: libc::c_int,
) -> libc::c_int {
    let mut p_dst: *mut libc::c_uchar = dst;
    let mut dst_end: *mut libc::c_uchar = p_dst.offset(dst_len as isize);
    let mut bits: uintptr_t = 0;
    let mut bits_used: libc::c_uint = 0 as libc::c_int as libc::c_uint;
    let mut adj: libc::c_uint = 0;
    let mut cur_enc_code: encode_el = encode_el { code: 0, bits: 0 };
    while src != src_end {
        let fresh8 = src;
        src = src.offset(1);
        cur_enc_code = encode_table[*fresh8 as usize];
        if (bits_used.wrapping_add(cur_enc_code.bits as libc::c_uint) as libc::c_ulong)
            < (::std::mem::size_of::<uintptr_t>() as libc::c_ulong)
                .wrapping_mul(8 as libc::c_int as libc::c_ulong)
        {
            bits <<= cur_enc_code.bits;
            bits |= cur_enc_code.code as libc::c_ulong;
            bits_used = bits_used.wrapping_add(cur_enc_code.bits as libc::c_uint);
        } else if p_dst
                .offset(::std::mem::size_of::<uintptr_t>() as libc::c_ulong as isize)
                <= dst_end
            {
            bits
                <<= (::std::mem::size_of::<uintptr_t>() as libc::c_ulong)
                    .wrapping_mul(8 as libc::c_int as libc::c_ulong)
                    .wrapping_sub(bits_used as libc::c_ulong);
            bits_used = (cur_enc_code.bits as libc::c_ulong)
                .wrapping_sub(
                    (::std::mem::size_of::<uintptr_t>() as libc::c_ulong)
                        .wrapping_mul(8 as libc::c_int as libc::c_ulong)
                        .wrapping_sub(bits_used as libc::c_ulong),
                ) as libc::c_uint;
            bits |= (cur_enc_code.code >> bits_used) as libc::c_ulong;
            let fresh9 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh9 = (bits >> 56 as libc::c_int) as libc::c_uchar;
            let fresh10 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh10 = (bits >> 48 as libc::c_int) as libc::c_uchar;
            let fresh11 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh11 = (bits >> 40 as libc::c_int) as libc::c_uchar;
            let fresh12 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh12 = (bits >> 32 as libc::c_int) as libc::c_uchar;
            let fresh13 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh13 = (bits >> 24 as libc::c_int) as libc::c_uchar;
            let fresh14 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh14 = (bits >> 16 as libc::c_int) as libc::c_uchar;
            let fresh15 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh15 = (bits >> 8 as libc::c_int) as libc::c_uchar;
            let fresh16 = p_dst;
            p_dst = p_dst.offset(1);
            *fresh16 = bits as libc::c_uchar;
            bits = cur_enc_code.code as uintptr_t;
        } else {
            return -(1 as libc::c_int)
        }
    }
    adj = bits_used
        .wrapping_add(bits_used.wrapping_neg() & 7 as libc::c_int as libc::c_uint);
    if bits_used != 0 && p_dst.offset((adj >> 3 as libc::c_int) as isize) <= dst_end {
        bits <<= bits_used.wrapping_neg() & 7 as libc::c_int as libc::c_uint;
        bits
            |= (((1 as libc::c_int)
                << (bits_used.wrapping_neg() & 7 as libc::c_int as libc::c_uint))
                - 1 as libc::c_int) as libc::c_ulong;
        let mut current_block_30: u64;
        match adj >> 3 as libc::c_int {
            8 => {
                let fresh17 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh17 = (bits >> 56 as libc::c_int) as libc::c_uchar;
                current_block_30 = 10417353277134363042;
            }
            7 => {
                current_block_30 = 10417353277134363042;
            }
            6 => {
                current_block_30 = 15337353807676329626;
            }
            5 => {
                current_block_30 = 1975143650977181970;
            }
            4 => {
                current_block_30 = 7637571549435005131;
            }
            3 => {
                current_block_30 = 3941840559453179642;
            }
            2 => {
                current_block_30 = 17949992114554496573;
            }
            _ => {
                current_block_30 = 1429228930891146098;
            }
        }
        match current_block_30 {
            10417353277134363042 => {
                let fresh18 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh18 = (bits >> 48 as libc::c_int) as libc::c_uchar;
                current_block_30 = 15337353807676329626;
            }
            _ => {}
        }
        match current_block_30 {
            15337353807676329626 => {
                let fresh19 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh19 = (bits >> 40 as libc::c_int) as libc::c_uchar;
                current_block_30 = 1975143650977181970;
            }
            _ => {}
        }
        match current_block_30 {
            1975143650977181970 => {
                let fresh20 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh20 = (bits >> 32 as libc::c_int) as libc::c_uchar;
                current_block_30 = 7637571549435005131;
            }
            _ => {}
        }
        match current_block_30 {
            7637571549435005131 => {
                let fresh21 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh21 = (bits >> 24 as libc::c_int) as libc::c_uchar;
                current_block_30 = 3941840559453179642;
            }
            _ => {}
        }
        match current_block_30 {
            3941840559453179642 => {
                let fresh22 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh22 = (bits >> 16 as libc::c_int) as libc::c_uchar;
                current_block_30 = 17949992114554496573;
            }
            _ => {}
        }
        match current_block_30 {
            17949992114554496573 => {
                let fresh23 = p_dst;
                p_dst = p_dst.offset(1);
                *fresh23 = (bits >> 8 as libc::c_int) as libc::c_uchar;
            }
            _ => {}
        }
        let fresh24 = p_dst;
        p_dst = p_dst.offset(1);
        *fresh24 = bits as libc::c_uchar;
        return p_dst.offset_from(dst) as libc::c_long as libc::c_int;
    } else if p_dst.offset((adj >> 3 as libc::c_int) as isize) <= dst_end {
        return p_dst.offset_from(dst) as libc::c_long as libc::c_int
    } else {
        return -(1 as libc::c_int)
    };
}
unsafe extern "C" fn lshpack_enc_enc_str(
    dst: *mut libc::c_uchar,
    mut dst_len: size_t,
    mut str: *const libc::c_uchar,
    mut str_len: libc::c_uint,
) -> libc::c_int {
    let mut size_buf: [libc::c_uchar; 4] = [0; 4];
    let mut p: *mut libc::c_uchar = 0 as *mut libc::c_uchar;
    let mut size_len: libc::c_uint = 0;
    let mut rc: libc::c_int = 0;
    if dst_len > 1 as libc::c_int as libc::c_ulong {
        rc = lshpack_enc_huff_encode(
            str,
            str.offset(str_len as isize),
            dst.offset(1 as libc::c_int as isize),
            dst_len.wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_int,
        );
    } else if dst_len == 1 as libc::c_int as libc::c_ulong {
        rc = 0 as libc::c_int;
    } else {
        return -(1 as libc::c_int)
    }
    if rc > 0 as libc::c_int && rc as size_t <= str_len as libc::c_ulong {
        if rc < 127 as libc::c_int {
            *dst = (0x80 as libc::c_int | rc) as libc::c_uchar;
            return 1 as libc::c_int + rc;
        }
        size_buf[0 as libc::c_int as usize] = 0x80 as libc::c_int as libc::c_uchar;
        str_len = rc as libc::c_uint;
        str = dst.offset(1 as libc::c_int as isize);
    } else if str_len as libc::c_ulong
            <= dst_len.wrapping_sub(1 as libc::c_int as libc::c_ulong)
        {
        if str_len < 127 as libc::c_int as libc::c_uint {
            *dst = str_len as libc::c_uchar;
            memcpy(
                dst.offset(1 as libc::c_int as isize) as *mut libc::c_void,
                str as *const libc::c_void,
                str_len as libc::c_ulong,
            );
            return (1 as libc::c_int as libc::c_uint).wrapping_add(str_len)
                as libc::c_int;
        }
        size_buf[0 as libc::c_int as usize] = 0 as libc::c_int as libc::c_uchar;
    } else {
        return -(1 as libc::c_int)
    }
    p = lshpack_enc_enc_int(
        size_buf.as_mut_ptr(),
        size_buf
            .as_mut_ptr()
            .offset(
                ::std::mem::size_of::<[libc::c_uchar; 4]>() as libc::c_ulong as isize,
            ),
        str_len,
        7 as libc::c_int as uint8_t,
    );
    if p == size_buf.as_mut_ptr() {
        return -(1 as libc::c_int);
    }
    size_len = p.offset_from(size_buf.as_mut_ptr()) as libc::c_long as libc::c_uint;
    if size_len.wrapping_add(str_len) as libc::c_ulong > dst_len {
        return -(1 as libc::c_int);
    }
    memmove(
        dst.offset(size_len as isize) as *mut libc::c_void,
        str as *const libc::c_void,
        str_len as libc::c_ulong,
    );
    memcpy(
        dst as *mut libc::c_void,
        size_buf.as_mut_ptr() as *const libc::c_void,
        size_len as libc::c_ulong,
    );
    return size_len.wrapping_add(str_len) as libc::c_int;
}
unsafe extern "C" fn henc_drop_oldest_entry(mut enc: *mut lshpack_enc) {
    let mut entry: *mut lshpack_enc_table_entry = 0 as *mut lshpack_enc_table_entry;
    let mut buckno: libc::c_uint = 0;
    entry = (*enc).hpe_all_entries.stqh_first;
    (*enc)
        .hpe_all_entries
        .stqh_first = (*(*enc).hpe_all_entries.stqh_first).ete_next_all.stqe_next;
    if ((*enc).hpe_all_entries.stqh_first).is_null() {
        (*enc).hpe_all_entries.stqh_last = &mut (*enc).hpe_all_entries.stqh_first;
    }
    buckno = (*entry).ete_nameval_hash
        & ((1 as libc::c_uint) << (*enc).hpe_nbits)
            .wrapping_sub(1 as libc::c_int as libc::c_uint);
    let ref mut fresh25 = (*((*enc).hpe_buckets).offset(buckno as isize))
        .by_nameval
        .stqh_first;
    *fresh25 = (*(*((*enc).hpe_buckets).offset(buckno as isize)).by_nameval.stqh_first)
        .ete_next_nameval
        .stqe_next;
    if (*fresh25).is_null() {
        let ref mut fresh26 = (*((*enc).hpe_buckets).offset(buckno as isize))
            .by_nameval
            .stqh_last;
        *fresh26 = &mut (*((*enc).hpe_buckets).offset(buckno as isize))
            .by_nameval
            .stqh_first;
    }
    buckno = (*entry).ete_name_hash
        & ((1 as libc::c_uint) << (*enc).hpe_nbits)
            .wrapping_sub(1 as libc::c_int as libc::c_uint);
    if entry == (*((*enc).hpe_buckets).offset(buckno as isize)).by_name.stqh_first {
        let ref mut fresh27 = (*((*enc).hpe_buckets).offset(buckno as isize))
            .by_name
            .stqh_first;
        *fresh27 = (*(*((*enc).hpe_buckets).offset(buckno as isize)).by_name.stqh_first)
            .ete_next_name
            .stqe_next;
        if (*fresh27).is_null() {
            let ref mut fresh28 = (*((*enc).hpe_buckets).offset(buckno as isize))
                .by_name
                .stqh_last;
            *fresh28 = &mut (*((*enc).hpe_buckets).offset(buckno as isize))
                .by_name
                .stqh_first;
        }
    }
    (*enc)
        .hpe_cur_capacity = ((*enc).hpe_cur_capacity)
        .wrapping_sub(
            (32 as libc::c_int as libc::c_uint)
                .wrapping_add((*entry).ete_name_len)
                .wrapping_add((*entry).ete_val_len),
        );
    (*enc).hpe_nelem = ((*enc).hpe_nelem).wrapping_sub(1);
    free(entry as *mut libc::c_void);
}
unsafe extern "C" fn henc_remove_overflow_entries(mut enc: *mut lshpack_enc) {
    while (*enc).hpe_cur_capacity > (*enc).hpe_max_capacity {
        henc_drop_oldest_entry(enc);
    }
}
unsafe extern "C" fn henc_grow_tables(mut enc: *mut lshpack_enc) -> libc::c_int {
    let mut new_buckets: *mut lshpack_double_enc_head = 0
        as *mut lshpack_double_enc_head;
    let mut new: [*mut lshpack_double_enc_head; 2] = [0
        as *mut lshpack_double_enc_head; 2];
    let mut entry: *mut lshpack_enc_table_entry = 0 as *mut lshpack_enc_table_entry;
    let mut n: libc::c_uint = 0;
    let mut old_nbits: libc::c_uint = 0;
    let mut idx: libc::c_int = 0;
    old_nbits = (*enc).hpe_nbits;
    new_buckets = malloc(
        (::std::mem::size_of::<lshpack_double_enc_head>() as libc::c_ulong)
            .wrapping_mul(
                ((1 as libc::c_uint)
                    << old_nbits.wrapping_add(1 as libc::c_int as libc::c_uint))
                    as libc::c_ulong,
            ),
    ) as *mut lshpack_double_enc_head;
    if new_buckets.is_null() {
        return -(1 as libc::c_int);
    }
    n = 0 as libc::c_int as libc::c_uint;
    while n < (1 as libc::c_uint) << old_nbits {
        new[0 as libc::c_int
            as usize] = &mut *new_buckets.offset(n as isize)
            as *mut lshpack_double_enc_head;
        new[1 as libc::c_int
            as usize] = &mut *new_buckets
            .offset(n.wrapping_add((1 as libc::c_uint) << old_nbits) as isize)
            as *mut lshpack_double_enc_head;
        (*new[0 as libc::c_int as usize])
            .by_name
            .stqh_first = 0 as *mut lshpack_enc_table_entry;
        (*new[0 as libc::c_int as usize])
            .by_name
            .stqh_last = &mut (**new.as_mut_ptr().offset(0 as libc::c_int as isize))
            .by_name
            .stqh_first;
        (*new[1 as libc::c_int as usize])
            .by_name
            .stqh_first = 0 as *mut lshpack_enc_table_entry;
        (*new[1 as libc::c_int as usize])
            .by_name
            .stqh_last = &mut (**new.as_mut_ptr().offset(1 as libc::c_int as isize))
            .by_name
            .stqh_first;
        (*new[0 as libc::c_int as usize])
            .by_nameval
            .stqh_first = 0 as *mut lshpack_enc_table_entry;
        (*new[0 as libc::c_int as usize])
            .by_nameval
            .stqh_last = &mut (**new.as_mut_ptr().offset(0 as libc::c_int as isize))
            .by_nameval
            .stqh_first;
        (*new[1 as libc::c_int as usize])
            .by_nameval
            .stqh_first = 0 as *mut lshpack_enc_table_entry;
        (*new[1 as libc::c_int as usize])
            .by_nameval
            .stqh_last = &mut (**new.as_mut_ptr().offset(1 as libc::c_int as isize))
            .by_nameval
            .stqh_first;
        loop {
            entry = (*((*enc).hpe_buckets).offset(n as isize)).by_name.stqh_first;
            if entry.is_null() {
                break;
            }
            let ref mut fresh29 = (*((*enc).hpe_buckets).offset(n as isize))
                .by_name
                .stqh_first;
            *fresh29 = (*(*((*enc).hpe_buckets).offset(n as isize)).by_name.stqh_first)
                .ete_next_name
                .stqe_next;
            if (*fresh29).is_null() {
                let ref mut fresh30 = (*((*enc).hpe_buckets).offset(n as isize))
                    .by_name
                    .stqh_last;
                *fresh30 = &mut (*((*enc).hpe_buckets).offset(n as isize))
                    .by_name
                    .stqh_first;
            }
            idx = (((*entry).ete_name_hash
                & ((1 as libc::c_uint)
                    << old_nbits.wrapping_add(1 as libc::c_int as libc::c_uint))
                    .wrapping_sub(1 as libc::c_int as libc::c_uint)) >> old_nbits
                & 1 as libc::c_int as libc::c_uint) as libc::c_int;
            (*entry).ete_next_name.stqe_next = 0 as *mut lshpack_enc_table_entry;
            *(*new[idx as usize]).by_name.stqh_last = entry;
            (*new[idx as usize])
                .by_name
                .stqh_last = &mut (*entry).ete_next_name.stqe_next;
        }
        loop {
            entry = (*((*enc).hpe_buckets).offset(n as isize)).by_nameval.stqh_first;
            if entry.is_null() {
                break;
            }
            let ref mut fresh31 = (*((*enc).hpe_buckets).offset(n as isize))
                .by_nameval
                .stqh_first;
            *fresh31 = (*(*((*enc).hpe_buckets).offset(n as isize))
                .by_nameval
                .stqh_first)
                .ete_next_nameval
                .stqe_next;
            if (*fresh31).is_null() {
                let ref mut fresh32 = (*((*enc).hpe_buckets).offset(n as isize))
                    .by_nameval
                    .stqh_last;
                *fresh32 = &mut (*((*enc).hpe_buckets).offset(n as isize))
                    .by_nameval
                    .stqh_first;
            }
            idx = (((*entry).ete_nameval_hash
                & ((1 as libc::c_uint)
                    << old_nbits.wrapping_add(1 as libc::c_int as libc::c_uint))
                    .wrapping_sub(1 as libc::c_int as libc::c_uint)) >> old_nbits
                & 1 as libc::c_int as libc::c_uint) as libc::c_int;
            (*entry).ete_next_nameval.stqe_next = 0 as *mut lshpack_enc_table_entry;
            *(*new[idx as usize]).by_nameval.stqh_last = entry;
            (*new[idx as usize])
                .by_nameval
                .stqh_last = &mut (*entry).ete_next_nameval.stqe_next;
        }
        n = n.wrapping_add(1);
    }
    free((*enc).hpe_buckets as *mut libc::c_void);
    (*enc).hpe_nbits = old_nbits.wrapping_add(1 as libc::c_int as libc::c_uint);
    (*enc).hpe_buckets = new_buckets;
    return 0 as libc::c_int;
}
unsafe extern "C" fn lshpack_enc_push_entry(
    mut enc: *mut lshpack_enc,
    mut input: *const lsxpack_header,
) -> libc::c_int {
    let mut buckno: libc::c_uint = 0;
    let mut entry: *mut lshpack_enc_table_entry = 0 as *mut lshpack_enc_table_entry;
    let mut size: size_t = 0;
    let mut name: *const libc::c_char = 0 as *const libc::c_char;
    let mut name_len: libc::c_uint = 0;
    if (*enc).hpe_nelem
        >= ((1 as libc::c_uint) << (*enc).hpe_nbits)
            .wrapping_div(2 as libc::c_int as libc::c_uint)
        && 0 as libc::c_int != henc_grow_tables(enc)
    {
        return -(1 as libc::c_int);
    }
    name_len = (*input).name_len as libc::c_uint;
    if name_len == 0 as libc::c_int as libc::c_uint {
        name = static_table[((*input).hpack_index as libc::c_int - 1 as libc::c_int)
                as usize]
            .name;
        name_len = static_table[((*input).hpack_index as libc::c_int - 1 as libc::c_int)
                as usize]
            .name_len;
    } else {
        name = lsxpack_header_get_name(input);
    }
    size = (::std::mem::size_of::<lshpack_enc_table_entry>() as libc::c_ulong)
        .wrapping_add(name_len as libc::c_ulong)
        .wrapping_add((*input).val_len as libc::c_ulong);
    entry = malloc(size) as *mut lshpack_enc_table_entry;
    if entry.is_null() {
        return -(1 as libc::c_int);
    }
    (*entry).ete_name_hash = (*input).name_hash;
    (*entry).ete_nameval_hash = (*input).nameval_hash;
    (*entry).ete_name_len = name_len;
    (*entry).ete_val_len = (*input).val_len as libc::c_uint;
    let fresh33 = (*enc).hpe_next_id;
    (*enc).hpe_next_id = ((*enc).hpe_next_id).wrapping_add(1);
    (*entry).ete_id = fresh33;
    memcpy(
        ((*entry).ete_buf).as_mut_ptr() as *mut libc::c_void,
        name as *const libc::c_void,
        name_len as libc::c_ulong,
    );
    memcpy(
        &mut *((*entry).ete_buf).as_mut_ptr().offset((*entry).ete_name_len as isize)
            as *mut libc::c_char as *mut libc::c_void,
        ((*input).buf).offset((*input).val_offset as libc::c_int as isize)
            as *const libc::c_void,
        (*input).val_len as libc::c_ulong,
    );
    (*entry).ete_next_all.stqe_next = 0 as *mut lshpack_enc_table_entry;
    *(*enc).hpe_all_entries.stqh_last = entry;
    (*enc).hpe_all_entries.stqh_last = &mut (*entry).ete_next_all.stqe_next;
    buckno = (*input).nameval_hash
        & ((1 as libc::c_uint) << (*enc).hpe_nbits)
            .wrapping_sub(1 as libc::c_int as libc::c_uint);
    (*entry).ete_next_nameval.stqe_next = 0 as *mut lshpack_enc_table_entry;
    let ref mut fresh34 = *(*((*enc).hpe_buckets).offset(buckno as isize))
        .by_nameval
        .stqh_last;
    *fresh34 = entry;
    let ref mut fresh35 = (*((*enc).hpe_buckets).offset(buckno as isize))
        .by_nameval
        .stqh_last;
    *fresh35 = &mut (*entry).ete_next_nameval.stqe_next;
    if (*input).hpack_index as libc::c_int == LSHPACK_HDR_UNKNOWN as libc::c_int {
        buckno = (*input).name_hash
            & ((1 as libc::c_uint) << (*enc).hpe_nbits)
                .wrapping_sub(1 as libc::c_int as libc::c_uint);
        (*entry).ete_next_name.stqe_next = 0 as *mut lshpack_enc_table_entry;
        let ref mut fresh36 = *(*((*enc).hpe_buckets).offset(buckno as isize))
            .by_name
            .stqh_last;
        *fresh36 = entry;
        let ref mut fresh37 = (*((*enc).hpe_buckets).offset(buckno as isize))
            .by_name
            .stqh_last;
        *fresh37 = &mut (*entry).ete_next_name.stqe_next;
    }
    (*enc)
        .hpe_cur_capacity = ((*enc).hpe_cur_capacity)
        .wrapping_add(
            (32 as libc::c_int as libc::c_uint)
                .wrapping_add(name_len)
                .wrapping_add((*input).val_len as libc::c_uint),
        );
    (*enc).hpe_nelem = ((*enc).hpe_nelem).wrapping_add(1);
    henc_remove_overflow_entries(enc);
    return 0 as libc::c_int;
}
unsafe extern "C" fn henc_resize_history(mut enc: *mut lshpack_enc) {
    let mut hist_buf: *mut uint32_t = 0 as *mut uint32_t;
    let mut hist_size: libc::c_uint = 0;
    let mut first: libc::c_uint = 0;
    let mut count: libc::c_uint = 0;
    let mut i: libc::c_uint = 0;
    let mut j: libc::c_uint = 0;
    hist_size = henc_hist_size((*enc).hpe_max_capacity);
    if hist_size == (*enc).hpe_hist_size {
        return;
    }
    if hist_size == 0 as libc::c_int as libc::c_uint {
        free((*enc).hpe_hist_buf as *mut libc::c_void);
        (*enc).hpe_hist_buf = 0 as *mut uint32_t;
        (*enc).hpe_hist_size = 0 as libc::c_int as libc::c_uint;
        (*enc).hpe_hist_idx = 0 as libc::c_int as libc::c_uint;
        (*enc).hpe_hist_wrapped = 0 as libc::c_int;
        return;
    }
    hist_buf = malloc(
        (::std::mem::size_of::<uint32_t>() as libc::c_ulong)
            .wrapping_mul(
                hist_size.wrapping_add(1 as libc::c_int as libc::c_uint) as libc::c_ulong,
            ),
    ) as *mut uint32_t;
    if hist_buf.is_null() {
        return;
    }
    if (*enc).hpe_hist_wrapped != 0 {
        first = ((*enc).hpe_hist_idx)
            .wrapping_add(1 as libc::c_int as libc::c_uint)
            .wrapping_rem((*enc).hpe_hist_size);
        count = (*enc).hpe_hist_size;
    } else {
        first = 0 as libc::c_int as libc::c_uint;
        count = (*enc).hpe_hist_idx;
    }
    i = 0 as libc::c_int as libc::c_uint;
    j = 0 as libc::c_int as libc::c_uint;
    while count > 0 as libc::c_int as libc::c_uint && j < hist_size {
        *hist_buf
            .offset(
                j as isize,
            ) = *((*enc).hpe_hist_buf)
            .offset(first.wrapping_add(i).wrapping_rem((*enc).hpe_hist_size) as isize);
        i = i.wrapping_add(1);
        j = j.wrapping_add(1);
        count = count.wrapping_sub(1);
    }
    (*enc).hpe_hist_size = hist_size;
    (*enc).hpe_hist_idx = j.wrapping_rem(hist_size);
    (*enc)
        .hpe_hist_wrapped = ((*enc).hpe_hist_idx == 0 as libc::c_int as libc::c_uint)
        as libc::c_int;
    free((*enc).hpe_hist_buf as *mut libc::c_void);
    (*enc).hpe_hist_buf = hist_buf;
}
unsafe extern "C" fn henc_hist_add(
    mut enc: *mut lshpack_enc,
    mut nameval_hash: uint32_t,
) -> libc::c_int {
    let mut last: libc::c_uint = 0;
    let mut p: *mut uint32_t = 0 as *mut uint32_t;
    if (*enc).hpe_hist_wrapped != 0 {
        last = (*enc).hpe_hist_size;
    } else {
        last = (*enc).hpe_hist_idx;
    }
    *((*enc).hpe_hist_buf).offset(last as isize) = nameval_hash;
    p = (*enc).hpe_hist_buf;
    while *p != nameval_hash {
        p = p.offset(1);
    }
    *((*enc).hpe_hist_buf).offset((*enc).hpe_hist_idx as isize) = nameval_hash;
    (*enc)
        .hpe_hist_idx = ((*enc).hpe_hist_idx)
        .wrapping_add(1 as libc::c_int as libc::c_uint)
        .wrapping_rem((*enc).hpe_hist_size);
    (*enc).hpe_hist_wrapped
        |= ((*enc).hpe_hist_idx == 0 as libc::c_int as libc::c_uint) as libc::c_int;
    return (p < ((*enc).hpe_hist_buf).offset(last as isize)) as libc::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_encode(
    mut enc: *mut lshpack_enc,
    mut dst: *mut libc::c_uchar,
    mut dst_end: *mut libc::c_uchar,
    mut input: *mut lsxpack_header_t,
) -> *mut libc::c_uchar {
    static mut indexed_prefix_number: [libc::c_char; 3] = [
        0x40 as libc::c_int as libc::c_char,
        0 as libc::c_int as libc::c_char,
        0x10 as libc::c_int as libc::c_char,
    ];
    let dst_org: *mut libc::c_uchar = dst;
    let mut rc: libc::c_int = 0;
    let mut val_matched: libc::c_int = 0 as libc::c_int;
    let mut table_id: libc::c_uint = 0;
    if dst_end <= dst {
        return dst_org;
    }
    if (*input).flags() as libc::c_int & LSXPACK_HPACK_VAL_MATCHED as libc::c_int != 0 {
        table_id = (*input).hpack_index as libc::c_uint;
        val_matched = 1 as libc::c_int;
    } else {
        if (*input).flags() as libc::c_int & LSXPACK_NEVER_INDEX as libc::c_int != 0 {
            (*input).indexed_type = 2 as libc::c_int as uint8_t;
        }
        table_id = henc_find_table_id(enc, input, &mut val_matched);
        if !((*enc).hpe_hist_buf).is_null() {
            rc = henc_hist_add(enc, (*input).nameval_hash);
            if rc == 0 && (*enc).hpe_hist_wrapped != 0
                && (*input).indexed_type as libc::c_int == 0 as libc::c_int
            {
                (*input).indexed_type = 1 as libc::c_int as uint8_t;
            }
        }
    }
    if table_id > 0 as libc::c_int as libc::c_uint {
        if val_matched != 0 {
            table_id > 61 as libc::c_int as libc::c_uint;
            *dst = 0x80 as libc::c_int as libc::c_uchar;
            dst = lshpack_enc_enc_int(
                dst,
                dst_end,
                table_id,
                7 as libc::c_int as uint8_t,
            );
            return dst;
        } else {
            *dst = indexed_prefix_number[(*input).indexed_type as usize]
                as libc::c_uchar;
            dst = lshpack_enc_enc_int(
                dst,
                dst_end,
                table_id,
                (if (*input).indexed_type as libc::c_int == 0 as libc::c_int {
                    6 as libc::c_int
                } else {
                    4 as libc::c_int
                }) as uint8_t,
            );
            if dst == dst_org {
                return dst_org;
            }
        }
    } else {
        let fresh38 = dst;
        dst = dst.offset(1);
        *fresh38 = indexed_prefix_number[(*input).indexed_type as usize]
            as libc::c_uchar;
        rc = lshpack_enc_enc_str(
            dst,
            dst_end.offset_from(dst) as libc::c_long as size_t,
            lsxpack_header_get_name(input) as *mut libc::c_uchar,
            (*input).name_len as libc::c_uint,
        );
        if rc < 0 as libc::c_int {
            return dst_org;
        }
        dst = dst.offset(rc as isize);
    }
    rc = lshpack_enc_enc_str(
        dst,
        dst_end.offset_from(dst) as libc::c_long as size_t,
        ((*input).buf as *const libc::c_uchar)
            .offset((*input).val_offset as libc::c_int as isize),
        (*input).val_len as libc::c_uint,
    );
    if rc < 0 as libc::c_int {
        return dst_org;
    }
    dst = dst.offset(rc as isize);
    if (*input).indexed_type as libc::c_int == 0 as libc::c_int {
        rc = lshpack_enc_push_entry(enc, input);
        if rc != 0 as libc::c_int {
            return dst_org;
        }
    }
    return dst;
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_enc_set_max_capacity(
    mut enc: *mut lshpack_enc,
    mut max_capacity: libc::c_uint,
) {
    (*enc).hpe_max_capacity = max_capacity;
    henc_remove_overflow_entries(enc);
    if lshpack_enc_hist_used(enc) != 0 {
        henc_resize_history(enc);
    }
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_dec_init(mut dec: *mut lshpack_dec) {
    memset(
        dec as *mut libc::c_void,
        0 as libc::c_int,
        ::std::mem::size_of::<lshpack_dec>() as libc::c_ulong,
    );
    (*dec).hpd_max_capacity = 4096 as libc::c_int as libc::c_uint;
    (*dec).hpd_cur_max_capacity = 4096 as libc::c_int as libc::c_uint;
    memset(
        &mut (*dec).hpd_dyn_table as *mut lshpack_arr as *mut libc::c_void,
        0 as libc::c_int,
        ::std::mem::size_of::<lshpack_arr>() as libc::c_ulong,
    );
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_dec_cleanup(mut dec: *mut lshpack_dec) {
    let mut val: uintptr_t = 0;
    while (*dec).hpd_dyn_table.nelem > 0 as libc::c_int as libc::c_uint {
        (*dec)
            .hpd_dyn_table
            .nelem = ((*dec).hpd_dyn_table.nelem)
            .wrapping_sub(1 as libc::c_int as libc::c_uint);
        val = *((*dec).hpd_dyn_table.els)
            .offset(
                ((*dec).hpd_dyn_table.off).wrapping_add((*dec).hpd_dyn_table.nelem)
                    as isize,
            );
        free(val as *mut dec_table_entry as *mut libc::c_void);
    }
    free((*dec).hpd_dyn_table.els as *mut libc::c_void);
    memset(
        &mut (*dec).hpd_dyn_table as *mut lshpack_arr as *mut libc::c_void,
        0 as libc::c_int,
        ::std::mem::size_of::<lshpack_arr>() as libc::c_ulong,
    );
}
unsafe extern "C" fn lshpack_dec_dec_int(
    mut src_p: *mut *const libc::c_uchar,
    mut src_end: *const libc::c_uchar,
    mut prefix_bits: libc::c_uint,
    mut value_p: *mut uint32_t,
) -> libc::c_int {
    let orig_src: *const libc::c_uchar = *src_p;
    let mut src: *const libc::c_uchar = 0 as *const libc::c_uchar;
    let mut prefix_max: libc::c_uint = 0;
    let mut M: libc::c_uint = 0;
    let mut val: uint32_t = 0;
    let mut B: uint32_t = 0;
    src = *src_p;
    prefix_max = (((1 as libc::c_int) << prefix_bits) - 1 as libc::c_int)
        as libc::c_uint;
    let fresh39 = src;
    src = src.offset(1);
    val = *fresh39 as uint32_t;
    val &= prefix_max;
    if val < prefix_max {
        *src_p = src;
        *value_p = val;
        return 0 as libc::c_int;
    }
    M = 0 as libc::c_int as libc::c_uint;
    loop {
        if src < src_end {
            let fresh40 = src;
            src = src.offset(1);
            B = *fresh40 as uint32_t;
            val = val.wrapping_add((B & 0x7f as libc::c_int as libc::c_uint) << M);
            M = M.wrapping_add(7 as libc::c_int as libc::c_uint);
        } else if (src.offset_from(orig_src) as libc::c_long)
                < 6 as libc::c_int as libc::c_long
            {
            return -(1 as libc::c_int)
        } else {
            return -(2 as libc::c_int)
        }
        if !(B & 0x80 as libc::c_int as libc::c_uint != 0) {
            break;
        }
    }
    if M <= 28 as libc::c_int as libc::c_uint
        || M == 35 as libc::c_int as libc::c_uint
            && *src.offset(-(1 as libc::c_int) as isize) as libc::c_int
                <= 0xf as libc::c_int
            && val
                .wrapping_sub(
                    ((*src.offset(-(1 as libc::c_int) as isize) as libc::c_int)
                        << 28 as libc::c_int) as libc::c_uint,
                ) < val
    {
        *src_p = src;
        *value_p = val;
        return 0 as libc::c_int;
    } else {
        return -(2 as libc::c_int)
    };
}
unsafe extern "C" fn hdec_drop_oldest_entry(mut dec: *mut lshpack_dec) {
    let mut entry: *mut dec_table_entry = 0 as *mut dec_table_entry;
    (*dec)
        .hpd_dyn_table
        .nelem = ((*dec).hpd_dyn_table.nelem)
        .wrapping_sub(1 as libc::c_int as libc::c_uint);
    let fresh41 = (*dec).hpd_dyn_table.off;
    (*dec).hpd_dyn_table.off = ((*dec).hpd_dyn_table.off).wrapping_add(1);
    entry = *((*dec).hpd_dyn_table.els).offset(fresh41 as isize) as *mut libc::c_void
        as *mut dec_table_entry;
    (*dec)
        .hpd_cur_capacity = ((*dec).hpd_cur_capacity)
        .wrapping_sub(
            (32 as libc::c_int as libc::c_uint)
                .wrapping_add((*entry).dte_name_len)
                .wrapping_add((*entry).dte_val_len),
        );
    (*dec).hpd_state = ((*dec).hpd_state).wrapping_add(1);
    free(entry as *mut libc::c_void);
}
unsafe extern "C" fn hdec_remove_overflow_entries(mut dec: *mut lshpack_dec) {
    while (*dec).hpd_cur_capacity > (*dec).hpd_cur_max_capacity {
        hdec_drop_oldest_entry(dec);
    }
}
unsafe extern "C" fn hdec_update_max_capacity(
    mut dec: *mut lshpack_dec,
    mut new_capacity: uint32_t,
) {
    (*dec).hpd_cur_max_capacity = new_capacity;
    hdec_remove_overflow_entries(dec);
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_dec_set_max_capacity(
    mut dec: *mut lshpack_dec,
    mut max_capacity: libc::c_uint,
) {
    (*dec).hpd_max_capacity = max_capacity;
    hdec_update_max_capacity(dec, max_capacity);
}
unsafe extern "C" fn hdec_huff_dec4bits(
    mut src_4bits: uint8_t,
    mut dst: *mut libc::c_uchar,
    mut status: *mut decode_status,
) -> *mut libc::c_uchar {
    let cur_dec_code: decode_el = decode_tables[(*status).state
        as usize][src_4bits as usize];
    if cur_dec_code.flags as libc::c_int & HPACK_HUFFMAN_FLAG_FAIL as libc::c_int != 0 {
        return 0 as *mut libc::c_uchar;
    }
    if cur_dec_code.flags as libc::c_int & HPACK_HUFFMAN_FLAG_SYM as libc::c_int != 0 {
        *dst = cur_dec_code.sym;
        dst = dst.offset(1);
    }
    (*status).state = cur_dec_code.state;
    (*status)
        .eos = (cur_dec_code.flags as libc::c_int
        & HPACK_HUFFMAN_FLAG_ACCEPTED as libc::c_int != 0 as libc::c_int) as libc::c_int
        as uint8_t;
    return dst;
}
unsafe extern "C" fn lshpack_dec_huff_decode(
    mut src: *const libc::c_uchar,
    mut src_len: libc::c_int,
    mut dst: *mut libc::c_uchar,
    mut dst_len: libc::c_int,
) -> libc::c_int {
    let mut p_src: *const libc::c_uchar = src;
    let src_end: *const libc::c_uchar = src.offset(src_len as isize);
    let mut p_dst: *mut libc::c_uchar = dst;
    let mut dst_end: *mut libc::c_uchar = dst.offset(dst_len as isize);
    let mut status: decode_status = {
        let mut init = decode_status {
            state: 0 as libc::c_int as uint8_t,
            eos: 1 as libc::c_int as uint8_t,
        };
        init
    };
    while p_src != src_end {
        if p_dst == dst_end {
            return -(3 as libc::c_int);
        }
        p_dst = hdec_huff_dec4bits(
            (*p_src as libc::c_int >> 4 as libc::c_int) as uint8_t,
            p_dst,
            &mut status,
        );
        if p_dst.is_null() {
            return -(1 as libc::c_int);
        }
        if p_dst == dst_end {
            return -(3 as libc::c_int);
        }
        p_dst = hdec_huff_dec4bits(
            (*p_src as libc::c_int & 0xf as libc::c_int) as uint8_t,
            p_dst,
            &mut status,
        );
        if p_dst.is_null() {
            return -(1 as libc::c_int);
        }
        p_src = p_src.offset(1);
    }
    if status.eos == 0 {
        return -(1 as libc::c_int);
    }
    return p_dst.offset_from(dst) as libc::c_long as libc::c_int;
}
unsafe extern "C" fn hdec_dec_str(
    mut dst: *mut libc::c_uchar,
    mut dst_len: size_t,
    mut src: *mut *const libc::c_uchar,
    mut src_end: *const libc::c_uchar,
) -> libc::c_int {
    if *src == src_end {
        return 0 as libc::c_int;
    }
    let mut is_huffman: libc::c_int = **src as libc::c_int & 0x80 as libc::c_int;
    let mut len: uint32_t = 0;
    if 0 as libc::c_int
        != lshpack_dec_dec_int(src, src_end, 7 as libc::c_int as libc::c_uint, &mut len)
    {
        return -(1 as libc::c_int);
    }
    let mut ret: libc::c_int = 0 as libc::c_int;
    if (src_end.offset_from(*src) as libc::c_long as uint32_t) < len {
        return -(1 as libc::c_int);
    }
    if is_huffman != 0 {
        ret = lshpack_dec_huff_decode(
            *src,
            len as libc::c_int,
            dst,
            dst_len as libc::c_int,
        );
        if ret < 0 as libc::c_int {
            return ret;
        }
        *src = (*src).offset(len as isize);
    } else if dst_len < len as libc::c_ulong {
        ret = dst_len.wrapping_sub(len as libc::c_ulong) as libc::c_int;
        if ret > -(3 as libc::c_int) {
            ret = -(3 as libc::c_int);
        }
    } else {
        memcpy(
            dst as *mut libc::c_void,
            *src as *const libc::c_void,
            len as libc::c_ulong,
        );
        *src = (*src).offset(len as isize);
        ret = len as libc::c_int;
    }
    return ret;
}
unsafe extern "C" fn hdec_get_table_entry(
    mut dec: *mut lshpack_dec,
    mut index: uint32_t,
) -> *mut dec_table_entry {
    let mut val: uintptr_t = 0;
    index = (index as libc::c_uint).wrapping_sub(61 as libc::c_int as libc::c_uint)
        as uint32_t as uint32_t;
    if index == 0 as libc::c_int as libc::c_uint || index > (*dec).hpd_dyn_table.nelem {
        return 0 as *mut dec_table_entry;
    }
    index = ((*dec).hpd_dyn_table.nelem).wrapping_sub(index);
    val = *((*dec).hpd_dyn_table.els)
        .offset(((*dec).hpd_dyn_table.off).wrapping_add(index) as isize);
    return val as *mut dec_table_entry;
}
unsafe extern "C" fn lshpack_dec_push_entry(
    mut dec: *mut lshpack_dec,
    mut xhdr: *const lsxpack_header,
) -> libc::c_int {
    let mut entry: *mut dec_table_entry = 0 as *mut dec_table_entry;
    let mut name_len: libc::c_uint = 0;
    let mut val_len: libc::c_uint = 0;
    let mut size: size_t = 0;
    name_len = (*xhdr).name_len as libc::c_uint;
    val_len = (*xhdr).val_len as libc::c_uint;
    size = (::std::mem::size_of::<dec_table_entry>() as libc::c_ulong)
        .wrapping_add(name_len as libc::c_ulong)
        .wrapping_add(val_len as libc::c_ulong);
    entry = malloc(size) as *mut dec_table_entry;
    if entry.is_null() {
        return -(1 as libc::c_int);
    }
    if 0 as libc::c_int
        != lshpack_arr_push(&mut (*dec).hpd_dyn_table, entry as uintptr_t)
    {
        free(entry as *mut libc::c_void);
        return -(1 as libc::c_int);
    }
    (*dec).hpd_state = ((*dec).hpd_state).wrapping_add(1);
    (*dec)
        .hpd_cur_capacity = ((*dec).hpd_cur_capacity)
        .wrapping_add(
            (32 as libc::c_int as libc::c_uint)
                .wrapping_add(name_len)
                .wrapping_add(val_len),
        );
    (*entry).dte_name_len = name_len;
    (*entry).dte_val_len = val_len;
    (*entry).dte_name_idx = (*xhdr).hpack_index;
    memcpy(
        ((*entry).dte_buf).as_mut_ptr() as *mut libc::c_void,
        lsxpack_header_get_name(xhdr) as *const libc::c_void,
        name_len as libc::c_ulong,
    );
    memcpy(
        &mut *((*entry).dte_buf).as_mut_ptr().offset((*entry).dte_name_len as isize)
            as *mut libc::c_char as *mut libc::c_void,
        lsxpack_header_get_value(xhdr) as *const libc::c_void,
        val_len as libc::c_ulong,
    );
    hdec_remove_overflow_entries(dec);
    return 0 as libc::c_int;
}
unsafe extern "C" fn lshpack_dec_copy_value(
    mut output: *mut lsxpack_header_t,
    mut dest: *mut libc::c_char,
    mut val: *const libc::c_char,
    mut val_len: libc::c_uint,
) -> libc::c_int {
    if val_len.wrapping_add(0 as libc::c_int as libc::c_uint)
        > (*output).val_len as libc::c_uint
    {
        return -(3 as libc::c_int);
    }
    (*output)
        .val_offset = ((*output).name_offset as libc::c_int
        + (*output).name_len as libc::c_int + 0 as libc::c_int) as lsxpack_strlen_t;
    (*output).val_len = val_len as lsxpack_strlen_t;
    memcpy(
        dest as *mut libc::c_void,
        val as *const libc::c_void,
        (*output).val_len as libc::c_ulong,
    );
    dest = dest.offset((*output).val_len as libc::c_int as isize);
    return 0 as libc::c_int;
}
unsafe extern "C" fn lshpack_dec_copy_name(
    mut output: *mut lsxpack_header_t,
    mut dest: *mut *mut libc::c_char,
    mut name: *const libc::c_char,
    mut name_len: libc::c_uint,
) -> libc::c_int {
    if name_len.wrapping_add(0 as libc::c_int as libc::c_uint)
        > (*output).val_len as libc::c_uint
    {
        return -(3 as libc::c_int);
    }
    (*output)
        .val_len = ((*output).val_len as libc::c_uint)
        .wrapping_sub(name_len.wrapping_add(0 as libc::c_int as libc::c_uint))
        as lsxpack_strlen_t as lsxpack_strlen_t;
    (*output).name_len = name_len as lsxpack_strlen_t;
    memcpy(
        *dest as *mut libc::c_void,
        name as *const libc::c_void,
        name_len as libc::c_ulong,
    );
    *dest = (*dest).offset(name_len as isize);
    return 0 as libc::c_int;
}
#[no_mangle]
pub unsafe extern "C" fn lshpack_dec_decode(
    mut dec: *mut lshpack_dec,
    mut src: *mut *const libc::c_uchar,
    mut src_end: *const libc::c_uchar,
    mut output: *mut lsxpack_header,
) -> libc::c_int {
    let mut current_block: u64;
    let mut entry: *mut dec_table_entry = 0 as *mut dec_table_entry;
    let mut index: uint32_t = 0;
    let mut new_capacity: uint32_t = 0;
    let mut indexed_type: libc::c_int = 0;
    let mut len: libc::c_int = 0;
    let mut s: *const libc::c_uchar = 0 as *const libc::c_uchar;
    let mut buf_len: size_t = (*output).val_len as size_t;
    let mut extra_buf: size_t = 0 as libc::c_int as size_t;
    if *src == src_end {
        return -(1 as libc::c_int);
    }
    buf_len = (*output).val_len as size_t;
    extra_buf = 0 as libc::c_int as size_t;
    s = *src;
    while *s as libc::c_int & 0xe0 as libc::c_int == 0x20 as libc::c_int {
        if 0 as libc::c_int
            != lshpack_dec_dec_int(
                &mut s,
                src_end,
                5 as libc::c_int as libc::c_uint,
                &mut new_capacity,
            )
        {
            return -(1 as libc::c_int);
        }
        if new_capacity > (*dec).hpd_max_capacity {
            return -(1 as libc::c_int);
        }
        hdec_update_max_capacity(dec, new_capacity);
        if s == src_end {
            return -(1 as libc::c_int);
        }
    }
    if *s as libc::c_int & 0x80 as libc::c_int != 0 {
        if 0 as libc::c_int
            != lshpack_dec_dec_int(
                &mut s,
                src_end,
                7 as libc::c_int as libc::c_uint,
                &mut index,
            )
        {
            return -(1 as libc::c_int);
        }
        if index == 0 as libc::c_int as libc::c_uint {
            return -(1 as libc::c_int);
        }
        indexed_type = LSHPACK_VAL_INDEX as libc::c_int;
    } else if *s as libc::c_int > 0x40 as libc::c_int {
        if 0 as libc::c_int
            != lshpack_dec_dec_int(
                &mut s,
                src_end,
                6 as libc::c_int as libc::c_uint,
                &mut index,
            )
        {
            return -(1 as libc::c_int);
        }
        indexed_type = LSHPACK_ADD_INDEX as libc::c_int;
    } else if *s as libc::c_int == 0x40 as libc::c_int {
        indexed_type = LSHPACK_ADD_INDEX as libc::c_int;
        index = LSHPACK_HDR_UNKNOWN as libc::c_int as uint32_t;
        s = s.offset(1);
    } else if *s as libc::c_int == 0x10 as libc::c_int {
        indexed_type = LSHPACK_NEVER_INDEX as libc::c_int;
        (*output)
            .set_flags(
                (*output).flags() | LSXPACK_NEVER_INDEX as libc::c_int as lsxpack_flag,
            );
        index = LSHPACK_HDR_UNKNOWN as libc::c_int as uint32_t;
        s = s.offset(1);
    } else if *s as libc::c_int & 0xf0 as libc::c_int == 0x10 as libc::c_int {
        if 0 as libc::c_int
            != lshpack_dec_dec_int(
                &mut s,
                src_end,
                4 as libc::c_int as libc::c_uint,
                &mut index,
            )
        {
            return -(1 as libc::c_int);
        }
        indexed_type = LSHPACK_NEVER_INDEX as libc::c_int;
        (*output)
            .set_flags(
                (*output).flags() | LSXPACK_NEVER_INDEX as libc::c_int as lsxpack_flag,
            );
    } else if *s as libc::c_int == 0 as libc::c_int {
        indexed_type = LSHPACK_NO_INDEX as libc::c_int;
        index = LSHPACK_HDR_UNKNOWN as libc::c_int as uint32_t;
        s = s.offset(1);
    } else {
        if 0 as libc::c_int
            != lshpack_dec_dec_int(
                &mut s,
                src_end,
                4 as libc::c_int as libc::c_uint,
                &mut index,
            )
        {
            return -(1 as libc::c_int);
        }
        indexed_type = LSHPACK_NO_INDEX as libc::c_int;
    }
    if index != LSHPACK_HDR_UNKNOWN as libc::c_int as libc::c_uint
        && index <= LSHPACK_HDR_WWW_AUTHENTICATE as libc::c_int as libc::c_uint
    {
        (*output).hpack_index = index as uint8_t;
    }
    let mut name: *mut libc::c_char = ((*output).buf)
        .offset((*output).name_offset as libc::c_int as isize);
    if index > 0 as libc::c_int as libc::c_uint {
        if index <= 61 as libc::c_int as libc::c_uint {
            if lshpack_dec_copy_name(
                output,
                &mut name,
                static_table[index.wrapping_sub(1 as libc::c_int as libc::c_uint)
                        as usize]
                    .name,
                static_table[index.wrapping_sub(1 as libc::c_int as libc::c_uint)
                        as usize]
                    .name_len,
            ) == -(3 as libc::c_int)
            {
                extra_buf = (static_table[index
                        .wrapping_sub(1 as libc::c_int as libc::c_uint) as usize]
                    .name_len)
                    .wrapping_add(0 as libc::c_int as libc::c_uint) as size_t;
                current_block = 9843970240016867479;
            } else {
                (*output)
                    .set_flags(
                        (*output).flags()
                            | LSXPACK_NAME_HASH as libc::c_int as lsxpack_flag,
                    );
                (*output)
                    .name_hash = static_table_name_hash[index
                    .wrapping_sub(1 as libc::c_int as libc::c_uint) as usize];
                if indexed_type == LSHPACK_VAL_INDEX as libc::c_int {
                    if lshpack_dec_copy_value(
                        output,
                        name,
                        static_table[index.wrapping_sub(1 as libc::c_int as libc::c_uint)
                                as usize]
                            .val,
                        static_table[index.wrapping_sub(1 as libc::c_int as libc::c_uint)
                                as usize]
                            .val_len,
                    ) == 0 as libc::c_int
                    {
                        (*output)
                            .set_flags(
                                (*output).flags()
                                    | LSXPACK_NAMEVAL_HASH as libc::c_int as lsxpack_flag,
                            );
                        (*output)
                            .nameval_hash = static_table_nameval_hash[index
                            .wrapping_sub(1 as libc::c_int as libc::c_uint) as usize];
                        current_block = 9019718986036631561;
                    } else {
                        extra_buf = (static_table[index
                                .wrapping_sub(1 as libc::c_int as libc::c_uint) as usize]
                            .val_len)
                            .wrapping_add(0 as libc::c_int as libc::c_uint) as size_t;
                        current_block = 9843970240016867479;
                    }
                } else {
                    current_block = 10769842751669019566;
                }
            }
        } else {
            entry = hdec_get_table_entry(dec, index);
            if entry.is_null() {
                return -(1 as libc::c_int);
            }
            if lshpack_dec_copy_name(
                output,
                &mut name,
                ((*entry).dte_buf).as_mut_ptr(),
                (*entry).dte_name_len,
            ) == -(3 as libc::c_int)
            {
                extra_buf = ((*entry).dte_name_len)
                    .wrapping_add(0 as libc::c_int as libc::c_uint) as size_t;
                current_block = 9843970240016867479;
            } else {
                if (*entry).dte_name_idx != 0 {
                    (*output).hpack_index = (*entry).dte_name_idx;
                } else {
                    (*output)
                        .hpack_index = LSHPACK_HDR_UNKNOWN as libc::c_int as uint8_t;
                }
                if indexed_type == LSHPACK_VAL_INDEX as libc::c_int {
                    if lshpack_dec_copy_value(
                        output,
                        name,
                        &mut *((*entry).dte_buf)
                            .as_mut_ptr()
                            .offset((*entry).dte_name_len as isize),
                        (*entry).dte_val_len,
                    ) == 0 as libc::c_int
                    {
                        current_block = 9019718986036631561;
                    } else {
                        extra_buf = ((*entry).dte_val_len)
                            .wrapping_add(0 as libc::c_int as libc::c_uint) as size_t;
                        current_block = 9843970240016867479;
                    }
                } else {
                    current_block = 10769842751669019566;
                }
            }
        }
    } else {
        len = hdec_dec_str(
            name as *mut libc::c_uchar,
            (*output).val_len as size_t,
            &mut s,
            src_end,
        );
        if len < 0 as libc::c_int {
            if len <= -(3 as libc::c_int) {
                extra_buf = -len as size_t;
            } else {
                return len
            }
            current_block = 9843970240016867479;
        } else {
            if len > 65535 as libc::c_int {
                return -(2 as libc::c_int);
            }
            (*output).name_len = len as lsxpack_strlen_t;
            name = name.offset((*output).name_len as libc::c_int as isize);
            (*output)
                .val_len = ((*output).val_len as libc::c_int - (len + 0 as libc::c_int))
                as lsxpack_strlen_t;
            current_block = 10769842751669019566;
        }
    }
    match current_block {
        10769842751669019566 => {
            len = hdec_dec_str(
                name as *mut libc::c_uchar,
                (*output).val_len as size_t,
                &mut s,
                src_end,
            );
            if len < 0 as libc::c_int {
                if len <= -(3 as libc::c_int) {
                    extra_buf = -len as size_t;
                } else {
                    return len
                }
                current_block = 9843970240016867479;
            } else {
                if len > 65535 as libc::c_int {
                    return -(2 as libc::c_int);
                }
                (*output)
                    .val_offset = ((*output).name_offset as libc::c_int
                    + (*output).name_len as libc::c_int + 0 as libc::c_int)
                    as lsxpack_strlen_t;
                (*output).val_len = len as lsxpack_strlen_t;
                if indexed_type == LSHPACK_ADD_INDEX as libc::c_int
                    && 0 as libc::c_int != lshpack_dec_push_entry(dec, output)
                {
                    return -(1 as libc::c_int);
                }
                current_block = 9019718986036631561;
            }
        }
        _ => {}
    }
    match current_block {
        9843970240016867479 => {
            buf_len = (buf_len as libc::c_ulong).wrapping_add(extra_buf) as size_t
                as size_t;
            (*output).val_len = buf_len as lsxpack_strlen_t;
            return -(3 as libc::c_int);
        }
        _ => {
            *src = s;
            return 0 as libc::c_int;
        }
    };
}
pub unsafe fn run_static_initializers() {
    static_table = [
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 11]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":authority\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":method\0" as *const u8 as *const libc::c_char,
                val: b"GET\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":method\0" as *const u8 as *const libc::c_char,
                val: b"POST\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 2]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":path\0" as *const u8 as *const libc::c_char,
                val: b"/\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 12]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":path\0" as *const u8 as *const libc::c_char,
                val: b"/index.html\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":scheme\0" as *const u8 as *const libc::c_char,
                val: b"http\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":scheme\0" as *const u8 as *const libc::c_char,
                val: b"https\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"200\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"204\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"206\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"304\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"400\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"404\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b":status\0" as *const u8 as *const libc::c_char,
                val: b"500\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 15]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"accept-charset\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 16]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"accept-encoding\0" as *const u8 as *const libc::c_char,
                val: b"gzip, deflate\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 16]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"accept-language\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"accept-ranges\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 7]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"accept\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 28]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"access-control-allow-origin\0" as *const u8
                    as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"age\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"allow\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"authorization\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"cache-control\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 20]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-disposition\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 17]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-encoding\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 17]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-language\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 15]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-length\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 17]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-location\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-range\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 13]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"content-type\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 7]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"cookie\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"date\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"etag\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 7]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"expect\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"expires\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"from\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"host\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 9]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"if-match\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 18]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"if-modified-since\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"if-none-match\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 9]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"if-range\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 20]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"if-unmodified-since\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 14]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"last-modified\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"link\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 9]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"location\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 13]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"max-forwards\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 19]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"proxy-authenticate\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 20]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"proxy-authorization\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 6]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"range\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"referer\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 8]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"refresh\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 12]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"retry-after\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 7]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"server\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 11]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"set-cookie\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 26]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"strict-transport-security\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 18]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"transfer-encoding\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 11]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"user-agent\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 5]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"vary\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 4]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"via\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
        {
            let mut init = C2RustUnnamed_1 {
                name_len: (::std::mem::size_of::<[libc::c_char; 17]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                val_len: (::std::mem::size_of::<[libc::c_char; 1]>() as libc::c_ulong)
                    .wrapping_sub(1 as libc::c_int as libc::c_ulong) as libc::c_uint,
                name: b"www-authenticate\0" as *const u8 as *const libc::c_char,
                val: b"\0" as *const u8 as *const libc::c_char,
            };
            init
        },
    ];
}
